name       : miopen
version    : 3.2.0
release    : 6
source     :
    # tag: rocm-6.2.4
    - git|https://github.com/ROCm/MIOpen.git : ba89256497cc8e98eff8fa957116d0ca7611aec5
homepage   : https://github.com/ROCmSoftwarePlatform/MIOpen
license    : MIT
component  : programming.library
summary    : AMD's Machine Intelligence Library
description: |
    MIOpen is AMD's library for high performance machine learning primitives.
networking : true
builddeps  :
    - pkgconfig(bzip2)
    - pkgconfig(eigen3)
    - pkgconfig(nlohmann_json)
    - pkgconfig(sqlite3)
    - pkgconfig(libzstd)
    - composable-kernel-devel
    - libboost-devel
    - rocblas-devel
    - roctracer-devel
    - rocrand-devel
    - git-lfs
    - half
    - frugally-deep
    - rocm-cmake
    - rocm-hip
    - rocmlir
debug      : false
environment: |
    export CXXFLAGS="${CXXFLAGS/-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=32/-fcf-protection=none}"
    # Too noisy
    export CXXFLAGS+=" -w"
    export CLANG_IGNORE_WERROR=1

    export ROCM_PATH=/usr
    export HIP_CLANG_PATH=/usr/lib64/llvm-rocm/bin
    export HIP_DEVICE_LIB_PATH=/usr/lib64/amdgcn/bitcode
    export DEVICE_LIB_PATH=$HIP_DEVICE_LIB_PATH
    export CMAKE_PREFIX_PATH=/usr/lib64/llvm-rocm
    export CMAKE_MODULE_PATH=/usr/lib64/llvm-rocm/lib64/cmake/llvm

    # export HIP_CLANG_LAUNCHER=sccache
    # export SCCACHE_IDLE_TIMEOUT=0
    # export CMAKE_C_COMPILER_LAUNCHER=sccache
    # export CMAKE_CXX_COMPILER_LAUNCHER=sccache
    export OFFLOAD_BUNDLER_COMPRESS=1
setup      : |
    # Otherwise git LFS doesn't pull anything donw
    git rm .lfsconfig
    git config --local user.name "Packager"
    git config --local user.email "no-reply@getsol.us"
    git commit -m "Remove .lfsconfig"
    git lfs install
    git lfs fetch
    git lfs checkout

    %patch -p1 -i $pkgfiles/0001-Extend-MIOpen-ISA-compatibility.patch

    %cmake_ninja -L \
      -DCMAKE_BUILD_TYPE="Release" \
      -DCMAKE_C_COMPILER=$HIP_CLANG_PATH/clang \
      -DCMAKE_CXX_COMPILER=$HIP_CLANG_PATH/clang++ \
      -DCMAKE_INSTALL_LIBDIR=lib%LIBSUFFIX% \
      -DROCM_SYMLINK_LIBS=OFF \
      -DBoost_USE_STATIC_LIBS=OFF \
      -DBUILD_TESTING=OFF \
      -DMIOPEN_TEST_ALL=OFF \
      -DMIOPEN_USE_COMGR=ON \
      -DMIOPEN_BACKEND=HIP \
      -DMIOPEN_AMDGCN_ASSEMBLER_PATH=$HIP_CLANG_PATH \
      -DMIOPEN_USE_COMPOSABLEKERNEL=ON \
      -DMIOPEN_USE_MIOPENGEMM=OFF \
      -DMIOPEN_USE_MLIR=ON \
      -DMIOPEN_USE_MIOPENTENSILE=OFF \
      -DMIOPEN_USE_ROCBLAS=ON \
      -DGPU_TARGETS="%AMDGPUTARGETS%" \
      -DAMDGPU_TARGETS="%AMDGPUTARGETS%"
build      : |
    %ninja_build
install    : |
    %ninja_install
    rm $installdir/usr/bin/install_precompiled_kernels.sh
