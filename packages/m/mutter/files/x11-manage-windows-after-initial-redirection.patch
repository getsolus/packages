diff --git a/src/compositor/meta-compositor-x11.c b/src/compositor/meta-compositor-x11.c
index 1ad3327ddf6f70d00a5c0d21da0d085d129e9a8a..ce7bc1945ced022c325aed7ab3caf7f7b7841c99 100644
--- a/src/compositor/meta-compositor-x11.c
+++ b/src/compositor/meta-compositor-x11.c
@@ -188,6 +188,8 @@ meta_compositor_x11_manage (MetaCompositor  *compositor,
 
   compositor_x11->have_x11_sync_object = meta_sync_ring_init (xdisplay);
 
+  meta_x11_display_redirect_windows (x11_display, display);
+
   return TRUE;
 }
 
diff --git a/src/core/display.c b/src/core/display.c
index 0a191c0fbca818aecc0d91f9f50affd72cf5e96a..f851f1be37219a18e8d2c7b35b43ddbd30a9119a 100644
--- a/src/core/display.c
+++ b/src/core/display.c
@@ -897,9 +897,9 @@ meta_display_init_x11 (MetaDisplay         *display,
 }
 
 static void
-on_x11_initialized (MetaDisplay  *display,
-                    GAsyncResult *result,
-                    gpointer      user_data)
+on_mandatory_x11_initialized (MetaDisplay  *display,
+                              GAsyncResult *result,
+                              gpointer      user_data)
 {
   g_autoptr (GError) error = NULL;
 
@@ -930,9 +930,6 @@ meta_display_new (MetaContext  *context,
   MetaDisplay *display;
   MetaDisplayPrivate *priv;
   guint32 timestamp;
-#ifdef HAVE_X11_CLIENT
-  Window old_active_xwindow = None;
-#endif
   MetaMonitorManager *monitor_manager;
   MetaSettings *settings;
   MetaInputCapture *input_capture;
@@ -1021,7 +1018,7 @@ meta_display_new (MetaContext  *context,
       if (x11_display_policy == META_X11_DISPLAY_POLICY_MANDATORY)
         {
           meta_display_init_x11 (display, NULL,
-                                 (GAsyncReadyCallback) on_x11_initialized,
+                                 (GAsyncReadyCallback) on_mandatory_x11_initialized,
                                  NULL);
         }
 #endif /* HAVE_XWAYLAND */
@@ -1048,14 +1045,6 @@ meta_display_new (MetaContext  *context,
   display->last_focus_time = timestamp;
   display->last_user_time = timestamp;
 
-#ifdef HAVE_X11
-  if (!meta_is_wayland_compositor ())
-    meta_prop_get_window (display->x11_display,
-                          display->x11_display->xroot,
-                          display->x11_display->atom__NET_ACTIVE_WINDOW,
-                          &old_active_xwindow);
-#endif
-
   if (!meta_compositor_manage (display->compositor, error))
     {
       g_object_unref (display);
@@ -1076,30 +1065,7 @@ meta_display_new (MetaContext  *context,
   g_signal_connect (display->gesture_tracker, "state-changed",
                     G_CALLBACK (gesture_tracker_state_changed), display);
 
-  /* We know that if mutter is running as a Wayland compositor,
-   * we start out with no windows.
-   */
-#ifdef HAVE_X11_CLIENT
-  if (!meta_is_wayland_compositor ())
-    meta_display_manage_all_xwindows (display);
-
-  if (old_active_xwindow != None)
-    {
-      MetaWindow *old_active_window;
-      old_active_window = meta_x11_display_lookup_x_window (display->x11_display,
-                                                            old_active_xwindow);
-      if (old_active_window)
-        meta_window_focus (old_active_window, timestamp);
-      else
-        meta_display_unset_input_focus (display, timestamp);
-    }
-  else
-    {
-      meta_display_unset_input_focus (display, timestamp);
-    }
-#else
   meta_display_unset_input_focus (display, timestamp);
-#endif
 
   g_signal_connect (stage, "notify::is-grabbed",
                     G_CALLBACK (on_is_grabbed_changed), display);
diff --git a/src/tests/x11-test.sh b/src/tests/x11-test.sh
index 59e460fc33668e5c459ba2fbbe88ffd3d99b4404..d95b2460f6e4ccd25158b9e005864e9c581e761e 100755
--- a/src/tests/x11-test.sh
+++ b/src/tests/x11-test.sh
@@ -34,6 +34,9 @@ echo \# Launched with pid $MUTTER2_PID
 MUTTER2_PID=$!
 wait $MUTTER1_PID
 
+echo \# Waiting for the second mutter to finish loading
+gdbus wait --session org.gnome.Mutter.IdleMonitor
+
 sleep 2
 
 echo \# Terminating clients > /dev/stderr
diff --git a/src/wayland/meta-xwayland.c b/src/wayland/meta-xwayland.c
index e95ca564010be4c95c875ac63dd85446c9b65499..83f2fcb25d9e3d5b4d6b54beefc9fdca54f56bf7 100644
--- a/src/wayland/meta-xwayland.c
+++ b/src/wayland/meta-xwayland.c
@@ -1170,6 +1170,7 @@ on_x11_display_setup (MetaDisplay         *display,
 {
   MetaX11Display *x11_display = meta_display_get_x11_display (display);
 
+  meta_x11_display_redirect_windows (x11_display, display);
   meta_xwayland_init_dnd (x11_display);
   meta_xwayland_init_xrandr (manager, x11_display);
 }
diff --git a/src/x11/meta-x11-display.c b/src/x11/meta-x11-display.c
index 4e98203dd256bb874dda3e12f35c39a6247898a0..599968a363b48e3c73f301b1c197b76b8e8e9bb0 100644
--- a/src/x11/meta-x11-display.c
+++ b/src/x11/meta-x11-display.c
@@ -300,8 +300,32 @@ static void
 on_x11_display_opened (MetaX11Display *x11_display,
                        MetaDisplay    *display)
 {
+  Window old_active_xwindow = None;
+
+  if (!meta_is_wayland_compositor ())
+    {
+      meta_prop_get_window (display->x11_display,
+                            display->x11_display->xroot,
+                            display->x11_display->atom__NET_ACTIVE_WINDOW,
+                            &old_active_xwindow);
+    }
+
   meta_display_manage_all_xwindows (display);
-  meta_x11_display_redirect_windows (x11_display, display);
+
+  if (old_active_xwindow != None)
+    {
+      MetaWindow *old_active_window;
+
+      old_active_window = meta_x11_display_lookup_x_window (x11_display,
+                                                            old_active_xwindow);
+      if (old_active_window)
+        {
+          uint32_t timestamp;
+
+          timestamp = display->x11_display->timestamp;
+          meta_window_focus (old_active_window, timestamp);
+        }
+    }
 }
 
 static void
