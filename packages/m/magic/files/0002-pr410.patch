From 2e0a689e820790c4da6e698574c21e024cb28cc6 Mon Sep 17 00:00:00 2001
From: "Darryl L. Miles" <darryl.miles@darrylmiles.org>
Date: Fri, 11 Jul 2025 15:54:52 +0100
Subject: [PATCH 1/3] C23: CmdSubrs.c fixup deprecated isascii()

---
 commands/CmdSubrs.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/commands/CmdSubrs.c b/commands/CmdSubrs.c
index 14de68bf..f62c5386 100644
--- a/commands/CmdSubrs.c
+++ b/commands/CmdSubrs.c
@@ -1196,6 +1196,17 @@ cmdGetSelFunc(
     return 1;			/* Skip any other selected cells. */
 }
 
+
+/* The Open Group, Sep 2006, Austin/317 deprecated isascii(),
+ *  Apparently it cannot be used portably in a localized application.
+ */
+static int
+magic_isascii(int c)
+{
+    return (c & ~0x7f) == 0;
+}
+
+
 /*
  * ----------------------------------------------------------------------------
  *
@@ -1228,7 +1239,7 @@ CmdIllegalChars(
 
     for (p = string; *p != 0; p++)
     {
-	if (!isascii(*p)) goto error;
+	if (!magic_isascii(*p)) goto error;
 	if (iscntrl(*p)) goto error;
 	for (bad = illegal; *bad != 0; bad++)
 	{
@@ -1237,7 +1248,7 @@ CmdIllegalChars(
 	continue;
 
 	error:
-	if (!isascii(*p) || iscntrl(*p))
+	if (!magic_isascii(*p) || iscntrl(*p))
 	{
 	    TxError("%s contains illegal control character 0x%x\n",
 		   msg, *p);

From 10a9d619f72fd8ffc5cd0f91f39e4ade229081f8 Mon Sep 17 00:00:00 2001
From: "Darryl L. Miles" <darryl.miles@darrylmiles.org>
Date: Wed, 18 Jun 2025 14:29:37 +0100
Subject: [PATCH 2/3] C23: use AC_HEADER_STDBOOL #include <stdbool.h>

---
 scripts/configure.in  |   3 ++
 utils/magic.h         |   9 +---
 utils/magic_stdbool.h | 101 ++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 105 insertions(+), 8 deletions(-)
 create mode 100644 utils/magic_stdbool.h

diff --git a/scripts/configure.in b/scripts/configure.in
index c0be24f9..b3b33510 100644
--- a/scripts/configure.in
+++ b/scripts/configure.in
@@ -129,6 +129,9 @@ AC_C_BIGENDIAN
 dnl Check for required header files
 AC_HEADER_STDC
 
+dnl Check for compiler bool support
+AC_HEADER_STDBOOL
+
 dnl Need either setenv or putenv
 AC_CHECK_FUNCS(setenv putenv)
 
diff --git a/utils/magic.h b/utils/magic.h
index 7b4356d6..b4aa6f46 100644
--- a/utils/magic.h
+++ b/utils/magic.h
@@ -85,14 +85,7 @@ typedef pointertype ClientData;
 
 /* --------------------------- Booleans ------------------------------- */
 
-typedef unsigned char bool;
-
-#ifndef TRUE
-#define	TRUE	((bool)1)
-#endif
-#ifndef FALSE
-#define	FALSE	((bool)0)
-#endif
+#include "utils/magic_stdbool.h"
 
 /* ----------------------- Simple functions --------------------------- */
 
diff --git a/utils/magic_stdbool.h b/utils/magic_stdbool.h
new file mode 100644
index 00000000..64af7355
--- /dev/null
+++ b/utils/magic_stdbool.h
@@ -0,0 +1,101 @@
+/*
+ *  utils/magic_stdbool.h
+ *
+ *  Copyright (C) 1985, 1990 Regents of the University of California.
+ *
+ *  Permission to use, copy, modify, and distribute this
+ *  software and its documentation for any purpose and without
+ *  fee is hereby granted, provided that the above copyright
+ *  notice appear in all copies.  The University of California
+ *  makes no representations about the suitability of this
+ *  software for any purpose.  It is provided "as is" without
+ *  express or implied warranty.  Export of this software outside
+ *  of the United States of America may require an export license.
+ *
+ *  SPDX-License-Identifier: HPND-UC-export-US
+ *
+ *
+ *  This file contains code snippets that are part of the GNU autoconf 2.69
+ *  project documentation.  This project is licensed under GPLv3 with a
+ *  Section 7 clause outlined in autoconf-2.69/COPYING.EXCEPTION.
+ *
+ *  The documentation for the autoconf project is licensed under GNU Free
+ *  Documentation License Version 1.3 or any later version published by the
+ *  Free Software Foundation.  The snippets in here are taken entirely from the
+ *  documentation so fall under GFDL-1.3-or-later terms.
+ *  The documentation published by the FSF can be seen at
+ *   https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/autoconf.html
+ *  This section seeks to provide attribution by providing references to the source
+ *  a link to the full license text and the required boilerplate text directly below:
+ *
+ *  Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.
+ *
+ *    Permission is granted to copy, distribute and/or modify this
+ *    document under the terms of the GNU Free Documentation License,
+ *    Version 1.3 or any later version published by the Free Software
+ *    Foundation; with no Invariant Sections, no Front-Cover texts, and
+ *    no Back-Cover Texts.  A copy of the license is included in the
+ *    section entitled "GNU Free Documentation License."
+ *
+ *  A full copy of the GNU Free Documentation License version 1.3 is available at:
+ *    https://www.gnu.org/licenses/fdl-1.3.html
+ *  SPDX-License-Identifier: GFDL-1.3-or-later
+ *
+ *
+ *  All other lines in this file are licensed under the HPND-UC-export-US license
+ *  at the top of this file inline with the main project licensing.
+ *
+ */
+
+#ifndef _MAGIC__UTILS__MAGIC_STDBOOL_H
+#define _MAGIC__UTILS__MAGIC_STDBOOL_H
+
+#ifdef HAVE_MAGIC_AUTOCONF_CONFIG_H
+#include "magic/autoconf/config.h"
+#endif
+
+/* This section is taken from autoconf-2.69 manual
+ * https://www.gnu.org/software/autoconf/manual/autoconf-2.69/html_node/Particular-Headers.html
+ * for HAVE_STDBOOL_H
+ */
+#ifdef HAVE_STDBOOL_H
+ # include <stdbool.h>
+
+ #ifndef TRUE
+  #define	TRUE	(true)
+ #endif
+ #ifndef FALSE
+  #define	FALSE	(false)
+ #endif
+#else
+ # ifndef HAVE__BOOL
+ #  ifdef __cplusplus
+ typedef bool _Bool;
+ #  else
+ #   define _Bool signed char
+ #  endif
+ # endif
+ # define bool _Bool
+ # define false 0
+ # define true 1
+ # define __bool_true_false_are_defined 1
+
+/* This section is taken from magic project, see historical magic.h */
+ /* originally magic.h used unsigned char but should be source compatible with
+  *  a real bool type such as that in C23/C++
+  */
+
+ /*typedef unsigned char bool;*/
+/* commented out the original magic definition to adopt the historical C
+ *  standard definition provided above.
+ */
+
+ #ifndef TRUE
+  #define	TRUE	((bool)1)
+ #endif
+ #ifndef FALSE
+  #define	FALSE	((bool)0)
+ #endif
+#endif
+
+#endif /* _MAGIC__UTILS__MAGIC_STDBOOL_H */

From 8f3c9c325001c7ce1a44e501ce4940917c9c7309 Mon Sep 17 00:00:00 2001
From: "Darryl L. Miles" <darryl.miles@darrylmiles.org>
Date: Wed, 18 Jun 2025 14:31:17 +0100
Subject: [PATCH 3/3] configure: autoconf regen (2.69) AC_HEADER_STDBOOL

---
 scripts/configure | 148 ++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 148 insertions(+)

diff --git a/scripts/configure b/scripts/configure
index 51ca793d..e6262296 100755
--- a/scripts/configure
+++ b/scripts/configure
@@ -1961,6 +1961,60 @@ $as_echo "$ac_res" >&6; }
 
 } # ac_fn_c_check_header_compile
 
+# ac_fn_c_check_type LINENO TYPE VAR INCLUDES
+# -------------------------------------------
+# Tests whether TYPE exists after having included INCLUDES, setting cache
+# variable VAR accordingly.
+ac_fn_c_check_type ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval \${$3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=no"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof ($2))
+	 return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof (($2)))
+	    return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+  eval "$3=yes"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+
+} # ac_fn_c_check_type
+
 # ac_fn_c_check_func LINENO FUNC VAR
 # ----------------------------------
 # Tests whether FUNC exists, setting the cache variable VAR accordingly
@@ -4880,6 +4934,100 @@ $as_echo "#define STDC_HEADERS 1" >>confdefs.h
 fi
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for stdbool.h that conforms to C99" >&5
+$as_echo_n "checking for stdbool.h that conforms to C99... " >&6; }
+if ${ac_cv_header_stdbool_h+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+             #include <stdbool.h>
+             #ifndef bool
+              "error: bool is not defined"
+             #endif
+             #ifndef false
+              "error: false is not defined"
+             #endif
+             #if false
+              "error: false is not 0"
+             #endif
+             #ifndef true
+              "error: true is not defined"
+             #endif
+             #if true != 1
+              "error: true is not 1"
+             #endif
+             #ifndef __bool_true_false_are_defined
+              "error: __bool_true_false_are_defined is not defined"
+             #endif
+
+             struct s { _Bool s: 1; _Bool t; } s;
+
+             char a[true == 1 ? 1 : -1];
+             char b[false == 0 ? 1 : -1];
+             char c[__bool_true_false_are_defined == 1 ? 1 : -1];
+             char d[(bool) 0.5 == true ? 1 : -1];
+             /* See body of main program for 'e'.  */
+             char f[(_Bool) 0.0 == false ? 1 : -1];
+             char g[true];
+             char h[sizeof (_Bool)];
+             char i[sizeof s.t];
+             enum { j = false, k = true, l = false * true, m = true * 256 };
+             /* The following fails for
+                HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
+             _Bool n[m];
+             char o[sizeof n == m * sizeof n[0] ? 1 : -1];
+             char p[-1 - (_Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
+             /* Catch a bug in an HP-UX C compiler.  See
+                http://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
+                http://lists.gnu.org/archive/html/bug-coreutils/2005-11/msg00161.html
+              */
+             _Bool q = true;
+             _Bool *pq = &q;
+
+int
+main ()
+{
+
+             bool e = &s;
+             *pq |= q;
+             *pq |= ! q;
+             /* Refer to every declared value, to avoid compiler optimizations.  */
+             return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
+                     + !m + !n + !o + !p + !q + !pq);
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdbool_h=yes
+else
+  ac_cv_header_stdbool_h=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdbool_h" >&5
+$as_echo "$ac_cv_header_stdbool_h" >&6; }
+   ac_fn_c_check_type "$LINENO" "_Bool" "ac_cv_type__Bool" "$ac_includes_default"
+if test "x$ac_cv_type__Bool" = xyes; then :
+
+cat >>confdefs.h <<_ACEOF
+#define HAVE__BOOL 1
+_ACEOF
+
+
+fi
+
+
+if test $ac_cv_header_stdbool_h = yes; then
+
+$as_echo "#define HAVE_STDBOOL_H 1" >>confdefs.h
+
+fi
+
+
 for ac_func in setenv putenv
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
