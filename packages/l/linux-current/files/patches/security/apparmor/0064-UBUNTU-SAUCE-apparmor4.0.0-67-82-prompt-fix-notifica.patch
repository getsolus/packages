From 7de95c5199384a62b85a06c851f356f5e136b465 Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Tue, 5 Sep 2023 13:53:08 -0700
Subject: [PATCH 64/78] UBUNTU: SAUCE: apparmor4.0.0 [67/82]: prompt - fix
 notification cache when updating

BugLink: https://bugs.launchpad.net/bugs/2028253

The notification cache when updating doesn't take into account allowed
permissions that did not go to the user upcall as part of a deny.
If userspace only replies to the deny portion of the notification
then the allowed permissions won't be added to the cache.

Signed-off-by: John Johansen <john.johansen@canonical.com>
(cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
---
 security/apparmor/notify.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/security/apparmor/notify.c b/security/apparmor/notify.c
index f3482d036944..fb55eaa36012 100644
--- a/security/apparmor/notify.c
+++ b/security/apparmor/notify.c
@@ -526,8 +526,7 @@ static void listener_complete_held_user_pending(struct aa_listener *listener,
 static bool response_is_valid_perm(struct apparmor_notif_resp_perm *reply,
 				   struct aa_knotif *knotif, u16 size)
 {
-	if ((knotif->ad->request | knotif->ad->denied) &
-	    ~(reply->allow | reply->deny)) {
+	if ((knotif->ad->denied) & ~(reply->allow | reply->deny)) {
 		AA_DEBUG(DEBUG_UPCALL,
 			 "id %lld: response does not cover permission bits in the upcall request/reply 0x%x/0x%x deny/reply 0x%x/0x%x",
 			 knotif->id, knotif->ad->request, reply->allow, knotif->ad->denied,
@@ -621,7 +620,8 @@ static void knotif_update_from_uresp_perm(struct aa_knotif *knotif,
 			 uresp->base.error);
 
 		knotif->ad->denied = uresp->deny;
-		knotif->ad->request = uresp->allow | uresp->deny;
+		knotif->ad->request = (knotif->ad->request | uresp->allow) &
+			~uresp->deny;
 		flags = uresp->base.flags;
 		if (!knotif->ad->denied) {
 			/* no more denial, clear the error*/
@@ -653,11 +653,13 @@ static void knotif_update_from_uresp_perm(struct aa_knotif *knotif,
 			 knotif->id, node->data.request, node->data.denied);
 		hit = aa_audit_cache_insert(&profile->learning_cache,
 					    node);
-		AA_DEBUG(DEBUG_UPCALL, "id %lld: cache insert %s: name %s node %s\n",
-			 knotif->id, hit != node ? "lost race" : "",
+		AA_DEBUG(DEBUG_UPCALL,
+			 "id %lld: (node %p, hit %p) cache insert %s: name %s node %s\n",
+			 knotif->id, node, hit, hit != node ? "entry already exists" : "",
 			 hit->data.name, node->data.name);
 		if (hit != node) {
-			AA_DEBUG(DEBUG_UPCALL, "id %lld: updating existing cache entry",
+			AA_DEBUG(DEBUG_UPCALL,
+				 "id %lld: updating existing cache entry",
 				 knotif->id);
 			aa_audit_cache_update_ent(&profile->learning_cache,
 						  hit, &node->data);
-- 
2.43.0

