From e6a9481b8116ef8525a8d1d383fd72975aac5044 Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Wed, 12 Apr 2023 22:32:01 -0700
Subject: [PATCH 56/78] UBUNTU: SAUCE: apparmor4.0.0 [59/82]: prompt - allow
 controlling of caching of a prompt response

BugLink: https://bugs.launchpad.net/bugs/2028253

Allow the user response to indicate whether a response should be
cached or not.

Signed-off-by: John Johansen <john.johansen@canonical.com>
(cherry picked from https://gitlab.com/jjohansen/apparmor-kernel)
Signed-off-by: Andrea Righi <andrea.righi@canonical.com>
---
 include/uapi/linux/apparmor.h     | 4 +++-
 security/apparmor/include/audit.h | 2 +-
 security/apparmor/notify.c        | 5 +++--
 3 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/include/uapi/linux/apparmor.h b/include/uapi/linux/apparmor.h
index 64e7dd97b4e8..d7dd1b771c2c 100644
--- a/include/uapi/linux/apparmor.h
+++ b/include/uapi/linux/apparmor.h
@@ -13,6 +13,8 @@
 #define APPARMOR_MODESET_KILL 64
 #define APPARMOR_MODESET_USER 128
 
+#define APPARMOR_FLAG_NOCACHE 1
+
 enum apparmor_notif_type {
 	APPARMOR_NOTIF_RESP,
 	APPARMOR_NOTIF_CANCEL,
@@ -42,7 +44,7 @@ struct apparmor_notif {
 	struct apparmor_notif_common base;
 	__u16 ntype;			/* notify type */
 	__u8 signalled;
-	__u8 reserved;
+	__u8 flags;
 	__u64 id;			/* unique id, not gloablly unique*/
 	__s32 error;			/* error if unchanged */
 } __attribute__((packed));
diff --git a/security/apparmor/include/audit.h b/security/apparmor/include/audit.h
index 84ed4040283e..c2108a1ee540 100644
--- a/security/apparmor/include/audit.h
+++ b/security/apparmor/include/audit.h
@@ -118,7 +118,7 @@ struct apparmor_audit_data {
 	const char *info;
 	u32 request;
 	u32 denied;
-
+	u8 flags;		/* temporary - move to audit_node or knotif */
 	struct task_struct *subjtsk;
 
 	union {
diff --git a/security/apparmor/notify.c b/security/apparmor/notify.c
index 42451c58cd95..61ddfe2ef70f 100644
--- a/security/apparmor/notify.c
+++ b/security/apparmor/notify.c
@@ -293,7 +293,7 @@ void __listener_complete_user_pending(struct aa_listener *listener,
 
 		knotif->ad->denied = uresp->deny;
 		knotif->ad->request = uresp->allow | uresp->deny;
-
+		knotif->ad->flags = uresp->base.flags;
 		if (!knotif->ad->denied) {
 			/* no more denial, clear the error*/
 			knotif->ad->error = 0;
@@ -433,7 +433,8 @@ int aa_do_notification(u16 ntype, struct aa_audit_node *node,
 		 */
 	} else {
 		err = 0;
-		*cache_response = true;
+		if (!(node->data.flags & 1))
+			*cache_response = true;
 		spin_lock(&listener->lock);
 		if (!list_empty(&knotif->list)) {
 			__listener_del_knotif(listener, knotif);
-- 
2.43.0

