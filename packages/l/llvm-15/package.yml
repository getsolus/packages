name       : llvm-15
version    : 15.0.7
release    : 1
source     :
    - https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.7/llvm-project-15.0.7.src.tar.xz : 8b5fcb24b4128cf04df1b0b9410ce8b1a729cb3c544e6da885d234280dedeac6
homepage   : http://llvm.org/
license    : Apache-2.0-with-LLVM-exception
summary    : Low Level Virtual Machine (Reusable compiler and toolchains)
component  : programming.devel
debug      : no
libsplit   : no
clang      : yes
description: |
    The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation ("LLVM IR").
# patterns   : /*
patterns   :
    - ^llvm-clang-15-devel :
        - /usr/lib64/llvm15/include/clang*
        - /usr/lib64/llvm15/lib64/libclang*.a
        - /usr/lib64/llvm15/lib64/cmake/clang
        - /usr/lib64/llvm15/share/clang
    - ^llvm-clang-15 :
        - /usr/bin/clang*
        - /usr/lib64/llvm15/bin/clang*
        - /usr/lib64/llvm15/libexec
        - /usr/lib64/llvm15/lib64/clang
        - /usr/lib64/llvm15/lib/clang
        - /usr/lib64/llvm15/share/clang
    - devel :
        - /usr/bin/a*
        - /usr/bin/b*
        - /usr/bin/c-index*
        - /usr/bin/d*
        - /usr/bin/g*
        - /usr/bin/h*
        - /usr/bin/i*
        - /usr/bin/l*
        - /usr/bin/o*
        - /usr/bin/s*
        - /usr/bin/v*
        - /usr/bin/w*
        - /usr/lib64/llvm15/bin/a*
        - /usr/lib64/llvm15/bin/b*
        - /usr/lib64/llvm15/bin/c-index*
        - /usr/lib64/llvm15/bin/d*
        - /usr/lib64/llvm15/bin/g*
        - /usr/lib64/llvm15/bin/h*
        - /usr/lib64/llvm15/bin/i*
        - /usr/lib64/llvm15/bin/l*
        - /usr/lib64/llvm15/bin/o*
        - /usr/lib64/llvm15/bin/s*
        - /usr/lib64/llvm15/bin/v*
        - /usr/lib64/llvm15/bin/w*
        - /usr/lib64/llvm15/lib/libscanbuild
        - /usr/lib64/llvm15/lib/libear
        - /usr/lib64/llvm15/lib64/libLTO*
        - /usr/lib64/llvm15/lib64/libRemarks*
        - /usr/lib64/llvm15/lib64/cmake/llvm
        - /usr/lib64/llvm15/lib64/cmake/lld
        - /usr/lib64/llvm15/lib64/cmake/openmp
        - /usr/lib64/llvm15/lib64/liba*.so
        - /usr/lib64/llvm15/lib64/liba*.a
        - /usr/lib64/llvm15/lib64/libLLVM*.a
        - /usr/lib64/llvm15/lib64/liblld*.a
        - /usr/lib64/llvm15/lib64/lib*omp*.bc
        - /usr/lib64/llvm15/lib64/lib*omp*.a
        - /usr/lib64/llvm15/lib64/lib*omp*.so
        - /usr/lib64/llvm15/lib64/L*.so
        - /usr/lib64/llvm15/include/llvm*
        - /usr/lib64/llvm15/include/lld*
        - /usr/lib64/llvm15/include/omp*
        - /usr/lib64/llvm15/share/man
        - /usr/lib64/llvm15/share/opt-viewer
        - /usr/lib64/llvm15/share/scan-build
        - /usr/lib64/llvm15/share/scan-view
builddeps  :
    - pkgconfig(libzstd)
rundeps    :
    - devel:
      - zstd-devel
    - ^llvm-clang-15-devel:
      - llvm-15-devel
      - llvm-clang-15
environment: |
    export CCACHE_MAXSIZE=50G
    
    # Decontaminate build environment
    unset LDFLAGS
    unset LD_AS_NEEDED
    unset CFLAGS
    unset CXXFLAGS

    export _PROJECTS="clang;lld;llvm"
    export _RUNTIMES="compiler-rt;openmp"
    export _TARGETS="all"

    # Set common build options here
    export CMAKE_COMMON_OPTIONS="
        -DCMAKE_SKIP_RPATH=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=%libdir%/llvm15 \
        -DCLANG_DEFAULT_LINKER=lld \
        -DCLANG_DEFAULT_OBJCOPY=llvm-objcopy \
        -DCLANG_DEFAULT_PIE_ON_LINUX=ON \
        -DENABLE_EXPERIMENTAL_NEW_PASS_MANAGER=ON \
        -DLLVM_INSTALL_UTILS=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DLLVM_BINUTILS_INCDIR=/usr/include \
        -DLLVM_CONFIG=%libdir%/llvm15/bin/llvm-config
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_ENABLE_ZLIB=ON \
        -DLLVM_ENABLE_ZSTD=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_ASSERTIONS=OFF \
        -DLLVM_ENABLE_BINDINGS=OFF \
        -DENABLE_LINKER_BUILD_ID=ON \
        -DLLVM_ENABLE_PIC=ON \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=OFF \
        -DCLANG_LINK_CLANG_DYLIB=OFF"

    # Used by everything except emul32 build
    export CMAKE_X86_64_OPTIONS="
         -DLLVM_DEFAULT_TARGET_TRIPLE=%HOST% \
         -DLLVM_TARGET_ARCH=x86_64 \
         -DLLVM_LIBDIR_SUFFIX=%LIBSUFFIX%"
setup      : |
    # Just annoying.
    %patch -p1 -i $pkgfiles/0001-Silently-ignore-copy-dt-needed-entries.patch
    # Support solus, it's triplet, etc.
    %patch -p1 -i $pkgfiles/0001-Support-solus-as-a-distro.patch

    # Patch cfe for Solus specific options
    pushd clang
        %patch -p1 -i $pkgfiles/0001-cfe-Use-correct-Solus-multilib-paths.patch
        %patch -p1 -i $pkgfiles/0001-Enable-stack-protector-strong-by-default.patch
        %patch -p2 -i $pkgfiles/force-correct-linker-version.diff
    popd

    # Pull lld in line with binutils linkers for consistency
    pushd lld
        %patch -p1 -i $pkgfiles/0001-Enable-as-needed-with-LD_AS_NEEDED-variable.patch
        %patch -p1 -i $pkgfiles/0002-Make-gnuhash-the-default-when-not-specified.patch
    popd

    %cmake_ninja -S llvm -L $CMAKE_X86_64_OPTIONS \
                 $CMAKE_COMMON_OPTIONS \
                 -DLLVM_ENABLE_PROJECTS=$_PROJECTS \
                 -DLLVM_ENABLE_RUNTIMES=$_RUNTIMES \
                 -DLLVM_TARGETS_TO_BUILD=$_TARGETS \
                 -DLLVM_BUILD_DOCS=OFF \
                 -DCMAKE_CXX_LINK_FLAGS="-lzstd -lz" \
build      : |
    %ninja_build
install    : |
    %ninja_install

    export LLVM_INSTALL_DIR=%libdir%/llvm15
    install -dm00755 $installdir/usr/bin

    for _binary in $installdir/$LLVM_INSTALL_DIR/bin/*; do
        _basename=$(basename $_binary)
        ln -s $LLVM_INSTALL_DIR/bin/$_basename $installdir/usr/bin/$_basename-15
    done

    ln -s $LLVM_INSTALL_DIR/lib64/libLLVM-15.so $installdir/%libdir%/libLLVM-15.so
    ln -s $LLVM_INSTALL_DIR/lib64/libLLVM-15.so $installdir/%libdir%/libLLVM-%version%.so
    ln -s $LLVM_INSTALL_DIR/lib64/libclang.so.15 $installdir/%libdir%/libclang.so.15
    ln -s $LLVM_INSTALL_DIR/lib64/libclang.so.15.0.7 $installdir/%libdir%/libclang.so.15.0.7
    ln -s $LLVM_INSTALL_DIR/lib64/libclang-cpp.so.15 $installdir/%libdir%/libclang-cpp.so.15
    ln -s $LLVM_INSTALL_DIR/lib64/libomptarget.so.15 $installdir/%libdir%/libomptarget.so.15

    ln -s $LLVM_INSTALL_DIR/lib64/clang/%version%/lib/x86_64-solus-linux $installdir/$LLVM_INSTALL_DIR/lib64/clang/%version%/lib/x86_64-unknown-linux-gnu
