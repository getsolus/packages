name       : ldc
version    : 1.39.0
release    : 68
source     :
    - git|https://github.com/ldc-developers/ldc.git : v1.39.0
homepage   : https://github.com/ldc-developers/ldc
license    :
    - Apache-2.0
    - BSD-3-Clause
    - BSL-1.0
component  : programming
summary    : The LLVM-based D Compiler
description: |
    The LDC project provides a portable D programming language compiler with modern optimization and code generation capabilities. The compiler uses the official DMD frontend to support the latest version of D2, and relies on the LLVM Core libraries for code generation.
clang      : true
patterns   :
    - libs :
        - /usr/lib64/*.so.*
    - /
builddeps  :
    - pkgconfig(LLVMSPIRVLib)
    - dmd
    - llvm-bolt
    - llvm-devel
rundeps    :
    - ldc-libs
environment: |
    unset LDFLAGS # bc we need manual linking off
setup      : |
    %apply_patches

    # Build basic compiler for bootstrap
    mkdir bootstrap && pushd bootstrap
    cmake -G Ninja .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_SHARED_LIBS=OFF \
        -DLDC_WITH_LLD=OFF \
        -DCMAKE_INSTALL_PREFIX=$workdir/ldc-bootstrap \
    ..
    ninja install %JOBS%
    popd
build      : |
    export LLVM_PROFILE_FILE="$workdir/%p.profraw"

    # Instrumented compiler & collect profiling data
    %cmake_ninja \
        -DLIB_SUFFIX=64 \
        -DBUILD_SHARED_LIBS=BOTH \
        -DBUILD_LTO_LIBS=ON \
        -DINCLUDE_INSTALL_DIR=/usr/include/dlang/ldc \
        -DSYSCONF_INSTALL_DIR=/usr/share/defaults/etc \
        -DLDC_WITH_LLD=OFF \
        -DD_COMPILER=$workdir/ldc-bootstrap/bin/ldmd2 \
        -DEXTRA_CXXFLAGS="-fprofile-generate -mllvm -vp-counters-per-site=1.5" \
        -DEXTRA_DFLAGS_LDC="-fprofile-generate -vp-counters-per-site=1.5" \
        -DCMAKE_EXE_LINKER_FLAGS="-fprofile-generate" \
        -DLDC_LINK_MANUALLY=OFF
    %ninja_build

    # ldc bootstrapping itself provides enough profiling data - no need for dedicated workload
    $workdir/ldc-bootstrap/bin/ldc-profdata merge --output=merged.profdata *.profraw
    rm -fr $workdir/solusBuildDir

    # Build optimized compiler with collected profile data
    %cmake_ninja \
        -DLIB_SUFFIX=64 \
        -DBUILD_SHARED_LIBS=BOTH \
        -DBUILD_LTO_LIBS=ON \
        -DINCLUDE_INSTALL_DIR=/usr/include/dlang/ldc \
        -DSYSCONF_INSTALL_DIR=/usr/share/defaults/etc \
        -DLDC_WITH_LLD=OFF \
        -DD_COMPILER=$workdir/ldc-bootstrap/bin/ldmd2 \
        -DD_COMPILER_FLAGS="-O -linker=lld -release" \
        -DEXTRA_CXXFLAGS="-fprofile-use=$workdir/merged.profdata" \
        -DEXTRA_DFLAGS_LDC="-fprofile-use=$workdir/merged.profdata" \
        -DLDC_LINK_MANUALLY=OFF \
        -DCMAKE_EXE_LINKER_FLAGS="-Wl,-q"
    %ninja_build
install    : |
    # BOLT for ~10% faster compiling times
    %bolt_instr $workdir/solusBuildDir/bin/ldc2
    %ninja_build all-test-runners
    %bolt_merge $workdir/solusBuildDir/bin/ldc2
    %bolt_opt $workdir/solusBuildDir/bin/ldc2

    %ninja_install
# Takes an age
#check      : |
#    %ninja_check
replaces   :
    - ldc-devel
