From fe4b44bf422c4c7370d4c2b0f9329ebc1794b921 Mon Sep 17 00:00:00 2001
From: Evan Maddock <maddock.evan@vivaldi.net>
Date: Fri, 10 Nov 2023 11:17:40 -0500
Subject: [PATCH] Use internal qm-dsp

Signed-off-by: Evan Maddock <maddock.evan@vivaldi.net>
---
 libs/qm-dsp/wscript | 35 ++---------------------------------
 wscript             |  2 --
 2 files changed, 2 insertions(+), 35 deletions(-)

diff --git a/libs/qm-dsp/wscript b/libs/qm-dsp/wscript
index ef5b9bddef..e4ce6733a9 100644
--- a/libs/qm-dsp/wscript
+++ b/libs/qm-dsp/wscript
@@ -15,41 +15,10 @@ def options(opt):
 
 def configure(conf):
     if conf.is_defined('USE_EXTERNAL_LIBS'):
-        conf.check_cxx(header_name="base/Pitch.h", mandatory=True, msg="Checking for qm-dsp headers")
-        conf.check_cxx(lib="qm-dsp", uselib_store="QMDSP", mandatory=True)
-
-        # Verify that qm-dsp is self-contained and that FFT transforms actually works
-        if not conf.check_cxx(msg = 'Checking qm-dsp without explicit kiss linking',
-                              features = 'cxx cxxprogram',
-                              fragment = """#include "dsp/transforms/FFT.h"\nint main(void) {\nFFT(4).process(false, nullptr, 0, nullptr, nullptr);\nFFTReal(4).forward(nullptr, nullptr, nullptr);\nreturn 0;\n}""",
-                              uselib = 'QMDSP',
-                              okmsg = 'ok',
-                              errmsg = "-lqm-dsp by itself failed",
-                              mandatory = False,
-                              ):
-            # The external qm-dsp might be built without embedded kiss - try to link with it explicitly and check again
-            if conf.check_cxx(lib="kissfft-double", uselib_store="KISSFFT", mandatory=False):
-                # kissfft ersions >= 130 have changed names (kiss_fft_double -> kissfft-double) and
-                # library organization
-                conf.env.append_value('LIB_QMDSP', conf.env['LIB_KISSFFT'])
-            else:
-                # kiss_fft <= 1.3.x
-                conf.check_cxx(lib="kiss_fft_double", uselib_store="KISS_FFT", mandatory=True)
-                conf.check_cxx(lib="kiss_fftr_double", uselib_store="KISS_FFTR", mandatory=True)
-                conf.env.append_value('LIB_QMDSP', conf.env['LIB_KISS_FFT'] + conf.env['LIB_KISS_FFTR'])
-
-            conf.check_cxx(msg = 'Checking qm-dsp with explicit kiss linking',
-                           features = 'cxx cxxprogram',
-                           fragment = """#include "dsp/transforms/FFT.h"\nint main(void) {\nFFT(4).process(false, nullptr, 0, nullptr, nullptr);\nFFTReal(4).forward(nullptr, nullptr, nullptr);\nreturn 0;\n}""",
-                           uselib = 'QMDSP',
-                           okmsg = '-lqm-dsp needs explicit kiss linking',
-                           errmsg = "qm-dsp doesn't work, even with kiss libraries",
-                           mandatory = True,
-                           )
+        conf.load('compiler_cxx')
+        autowaf.configure(conf)
 
 def build(bld):
-    if bld.is_defined('USE_EXTERNAL_LIBS'):
-        return
 
     # Host Library
     obj = bld(features = 'c cxx cxxstlib')
diff --git a/wscript b/wscript
index 7958eebf7d..057da8a54c 100644
--- a/wscript
+++ b/wscript
@@ -1139,8 +1139,6 @@ def configure(conf):
 
     if Options.options.use_external_libs:
         conf.define('USE_EXTERNAL_LIBS', 1)
-        conf.env.append_value(
-            'CXXFLAGS', '-I' + Options.options.qm_dsp_include)
 
     if Options.options.boost_include != '':
         conf.env.append_value('CXXFLAGS', '-I' + Options.options.boost_include)
-- 
2.42.0

