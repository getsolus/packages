name       : netdata
version    : 2.3.2
release    : 19
source     :
    - https://github.com/netdata/netdata/releases/download/v2.3.2/netdata-v2.3.2.tar.gz : ae0ff66a4f9ea44ef4e51fbb331040508f1c12c7f6311bff347fe139870e5dd4
homepage   : https://www.netdata.cloud/
license    : GPL-3.0-or-later
component  : network.util
summary    : Real-time performance monitoring, done right
description: |
    netdata is the fastest way to visualize metrics. It is a resource efficient, highly optimized system for collecting and visualizing any type of realtime timeseries data, from CPU usage, disk activity, SQL queries, API calls, web site visitors, etc. netdata tries to visualize the truth of now, in its greatest detail, so that you can get insights of what is happening now and what just happened, on your systems and applications.
builddeps  :
    - pkgconfig(cups)
    - pkgconfig(json-c)
    - pkgconfig(libbpf)
    - pkgconfig(libcurl)
    - pkgconfig(libelf)
    - pkgconfig(liblz4)
    - pkgconfig(libmnl)
    - pkgconfig(libuv)
    - pkgconfig(protobuf)
    - pkgconfig(snappy)
    - pkgconfig(yaml-0.1)
    - git
    - golang
networking : true
clang      : true
optimize   : thin-lto
environment: |
    export CGO_LDFLAGS="${LDFLAGS}"
    export GO_LDFLAGS="-linkmode=external"
    export GOFLAGS='-buildmode=pie -trimpath -mod=readonly -modcacherw'
setup      : |
    %patch -p1 -i $pkgfiles/0001-Move-to-libdir.patch
    %patch -p1 -i $pkgfiles/0001-Ensure-that-edit-config-works-even-if-called-from-di.patch
    %patch -p1 -i $pkgfiles/0001-Better-confirm-to-go-standards.patch
    %patch -p1 -d src/ml/dlib -i $pkgfiles/ftbfs-dlib-clang-19.patch

    pushd src/go
    go mod vendor
    popd

    %cmake_ninja \
                 -DBUILD_FOR_PACKAGING=ON \
                 -DCMAKE_INSTALL_PREFIX=/ \
                 -DENABLE_LEGACY_EBPF_PROGRAMS=OFF \
                 -DENABLE_LIBBACKTRACE=OFF \
                 -DENABLE_PLUGIN_FREEIPMI=OFF \
                 -DENABLE_PLUGIN_NFACCT=OFF \
                 -DENABLE_PLUGIN_XENSTAT=OFF
build      : |
    %ninja_build
install    : |
    %ninja_install

    %python3_compile $installdir/usr/libexec/netdata/python.d/

    # Install netdata systemd stuff
    install -Dm00644 $pkgfiles/netdata{,-setup}.service -t $installdir/usr/lib/systemd/system
    install -Dm00644 $pkgfiles/netdata.sysusers $installdir/usr/lib/sysusers.d/netdata.conf
    install -Dm00644 $pkgfiles/netdata.tmpfiles $installdir/usr/lib/tmpfiles.d/netdata.conf

    ### Caps reference: https://raw.githubusercontent.com/netdata/netdata/master/netdata.spec.in

    # CAP_NET_ADMIN needed for WireGuard collector
    # CAP_NET_RAW needed for ping collector
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/go.d.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/go.d.plugin
    setcap 'CAP_DAC_READ_SEARCH=eip CAP_NET_ADMIN=eip CAP_NET_RAW=eip' $installdir/usr/lib64/netdata/plugins.d/go.d.plugin

    # Part of go.d.plugin
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/ndsudo
    chmod 4750 $installdir/usr/lib64/netdata/plugins.d/ndsudo
    setcap 'CAP_SETUID=ep' $installdir/usr/lib64/netdata/plugins.d/ndsudo

    # CAP_DAC_READ_SEARCH and CAP_SYS_PTRACE needed for data collection by the plugin.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/apps.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/apps.plugin
    setcap 'CAP_DAC_READ_SEARCH=ep CAP_SYS_PTRACE=ep' $installdir/usr/lib64/netdata/plugins.d/apps.plugin

    # CAP_DAC_READ_SEARCH needed to access the files the plugin reads to collect data.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/slabinfo.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/slabinfo.plugin
    setcap 'CAP_DAC_READ_SEARCH=ep' $installdir/usr/lib64/netdata/plugins.d/slabinfo.plugin

    # CAP_PERFMON needed for data collection
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/perf.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/perf.plugin
    setcap 'CAP_PERFMON=ep' $installdir/usr/lib64/netdata/plugins.d/perf.plugin

    # setuid needed to run as root for ebpf
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/ebpf.plugin
    chmod 4750 $installdir/usr/lib64/netdata/plugins.d/ebpf.plugin

    # CAP_DAC_READ_SEARCH required for data collection.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/debugfs.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/debugfs.plugin
    setcap 'CAP_DAC_READ_SEARCH=ep' $installdir/usr/lib64/netdata/plugins.d/debugfs.plugin

    # CAP_DAC_READ_SEARCH required for data collection.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/systemd-journal.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/systemd-journal.plugin
    setcap 'CAP_DAC_READ_SEARCH=ep' $installdir/usr/lib64/netdata/plugins.d/systemd-journal.plugin

    # CAP_SYS_ADMIN, CAP_SYS_PTRACE and CAP_DAC_READ_SEARCH needed for data collection.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/network-viewer.plugin
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/network-viewer.plugin
    setcap 'CAP_SYS_ADMIN=ep CAP_SYS_PTRACE=ep CAP_DAC_READ_SEARCH=ep' $installdir/usr/lib64/netdata/plugins.d/network-viewer.plugin

    # cgroup-network detects the network interfaces of CGROUPs
    # it must be able to use setns() and run cgroup-network-helper.sh as root
    # the helper script reads /proc/PID/fdinfo/* files, runs virsh, etc.
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/cgroup-network{,-helper.sh}
    chmod 4750 $installdir/usr/lib64/netdata/plugins.d/cgroup-network
    chmod 750 $installdir/usr/lib64/netdata/plugins.d/cgroup-network-helper.sh

    # local-listeners detects the local processes that are listening for connections
    chown root:650 $installdir/usr/lib64/netdata/plugins.d/local-listeners
    chmod 4750 $installdir/usr/lib64/netdata/plugins.d/local-listeners

    # Better in the libdir
    mv $installdir/etc/netdata/{.install-type,edit-config} $installdir/usr/lib64/netdata

    # Not needed
    rm -rfv $installdir/usr/share/doc/

    # This plugin is designed poorly and shouldn't be used
    rm -rfv $installdir/usr/lib64/netdata/plugins.d/ioping.plugin \
            $installdir/usr/lib/netdata/conf.d/health.d/ioping.conf \
            $installdir/usr/lib/netdata/conf.d/ioping.conf \
            $installdir/usr/lib/systemd/journald@netdata.conf.d/

    # Stateless
    rm -v $installdir/etc/default/netdata \
          $installdir/etc/init.d/netdata \
          $installdir/etc/netdata/netdata.conf

    rmdir -v $installdir/etc/default \
             $installdir/etc/init.d \
             $installdir/etc/netdata/charts.d \
             $installdir/etc/netdata/custom-plugins.d \
             $installdir/etc/netdata/go.d \
             $installdir/etc/netdata/health.d \
             $installdir/etc/netdata/python.d \
             $installdir/etc/netdata/ssl \
             $installdir/etc/netdata/statsd.d \
             $installdir/etc/netdata \
             $installdir/etc \
             $installdir/var/cache/netdata \
             $installdir/var/cache \
             $installdir/var/run/netdata \
             $installdir/var/run \
             $installdir/var/log/netdata \
             $installdir/var/log \
             $installdir/var/lib/netdata/cloud.d \
             $installdir/var/lib/netdata/registry \
             $installdir/var/lib/netdata/ \
             $installdir/var/lib/ \
             $installdir/var/
