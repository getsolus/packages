name       : util-linux
version    : 2.40.4
release    : 51
source     :
    - https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.40/util-linux-2.40.4.tar.xz : 5c1daf733b04e9859afdc3bd87cc481180ee0f88b5c0946b16fdec931975fb79
homepage   : https://github.com/util-linux/util-linux
license    :
    - BSD-3-Clause
    - BSD-4-Clause-UC
    - GPL-2.0-only
    - GPL-2.0-or-later
    - LGPL-2.1-or-later
    - Public-Domain
component  :
    - system.base
    - ^python3-libmount : programming.python
summary    :
    - util-linux (Essential Linux utilties)
    - ^python3-libmount : Libmount bindings for Python
description:
    - Util-linux is a suite of essential tools for any Linux system, such as chsh, kill, cfdisk, mkfs, mount, and more.
    - ^python3-libmount : Libmount bindings for Python
emul32     : yes
autodep    : no
devel      : yes
builddeps  :
    - pkgconfig32(libeconf)
    - pkgconfig32(libgcrypt)
    - pkgconfig32(liblzma)
    - pkgconfig32(libsystemd)
    - pkgconfig32(libxcrypt)
    - pkgconfig32(ncursesw)
    - pkgconfig32(pam)
    - pkgconfig32(zlib)
    - pkgconfig(libcap-ng)
    - pkgconfig(python3)
    - pkgconfig(sqlite3)
    - asciidoctor
rundeps    :
    - devel :
        - libeconf-devel
    - 32bit-devel :
        - libeconf-32bit-devel
setup      : |
    # Fix usage with musl
    export CFLAGS="${CFLAGS/-D_FORTIFY_SOURCE=2/}"

    if [ -n "${EMUL32BUILD+set}" ]; then
        %meson_configure \
                         -Dbuild-python=disabled
    else
        %meson_configure \
                         -Deconf=enabled \
                         -Dvendordir=/usr/share/defaults/etc
    fi
build      : |
    if [ -n "${EMUL32BUILD+set}" ]; then
        meson compile -C solusBuildDir %JOBS% \
                      ./libblkid/blkid:shared_library \
                      ./libblkid/blkid:static_library \
                      fdisk:shared_library \
                      mount:shared_library \
                      ./libsmartcols/smartcols:shared_library \
                      ./libsmartcols/smartcols:static_library \
                      ./libuuid/uuid:shared_library \
                      ./libuuid/uuid:static_library
    else
        %ninja_build
    fi
install    : |
    if [ -n "${EMUL32BUILD+set}" ]; then
        # create the dirs we need first
        install -dm00755 $installdir/usr/lib32/pkgconfig
        # install libraries
        find solusBuildDir/ \
            \( -name '*.so.*.*' -o -name '*.a' \) ! -name '*.p' ! -name '*.symbols'  \
            -print \
            -exec install -Dm0644 '{}' $installdir/usr/lib32/ \;

        # Manually create soname links
        for lib in $installdir/%libdir%/lib*.so.*; do
            i=`dirname ${lib}`
            clean=`echo $(basename ${lib})|sed -e 's|.so\..*|.so|'`
            soname=`objdump -p ${lib} | gawk '/SONAME/ {print $2}'`
            echo $lib $i $clean $soname
            if [[ ! -e $i/${soname} ]] ; then
                ln -sv `basename ${lib}` $i/${soname}
            fi
            if [[ ! -e $i/${clean} ]]; then
                ln -sv `basename ${lib}` $i/${clean}
            fi
        done

        # install .pc files
        find solusBuildDir/ \
            -type f -name '*.pc' ! -name '*uninstalled*' \
            -print \
            -exec install -Dm0644 '{}' $installdir/usr/lib32/pkgconfig/ \;
    else
        %ninja_install

        # Arch command
        install -m 00755 $pkgfiles/arch $installdir/usr/bin/arch

        mv $installdir/usr/lib/* $installdir/usr/lib64
        rmdir $installdir/usr/lib

        # Ensure that uuid daemon works
        install -Dm00644 $pkgfiles/util-linux.sysusers $installdir/%libdir%/sysusers.d/util-linux.conf
        install -D -d -m 00755 $installdir/%libdir%/systemd/system/sockets.target.wants
        ln -sv ../uuidd.socket -t $installdir/%libdir%/systemd/system/sockets.target.wants

        # PAM
        install -dm00755 $installdir/usr/share/defaults/etc/pam.d
        install -m00644 $pkgfiles/pam.d/* -t $installdir/usr/share/defaults/etc/pam.d

        # Install compat links T10615
        for TOP in {bin,sbin}; do
            install -D -d -m 00755 $installdir/$TOP
            pushd $installdir/usr/$TOP
            for FILE in *; do
                ln -srv $installdir/usr/$TOP/$FILE $installdir/$TOP/$FILE
            done
            popd
        done
    fi
# Tests compile but they are not run because of
# "Ignore util-linux test suite [non-root UID expected]."
# check      : |
#     if [ -z "${EMUL32BUILD+set}" ]; then
#         unset LD_PRELOAD
#         %ninja_check
#     fi
patterns   :
    - ^python3-libmount :
        - /usr/lib64/python3*/site-packages/libmount
