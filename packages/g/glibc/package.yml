name       : glibc
version    : '2.38'
release    : 98
source     :
    # release/2.38/master
    - git|git://sourceware.org/git/glibc.git : bf5aa419cbf545d2cd09dc097e518033d6e4df5e
homepage   : https://www.gnu.org/software/libc/
license    : GPL-3.0-or-later
summary    :
    - This package contains the GNU C libraries and header files
    - benchmarks : Various benchmarks to test the performance of GNU C libraries
description: |
    This package contains the GNU C libraries and header files.  The GNU C library was written originally by Roland McGrath, and is currently maintained by Ulrich Drepper.  Some parts of the library were contributed or worked on by other people. You'll need this package to compile programs.
libsplit   : no
devel      : yes
autodep    : no
emul32     : yes
avx2       : yes
component  : system.base
patterns   :
    - 32bit : /lib/ld-linux.so.2
    - benchmarks : /usr/bin/bench-*
setup      : |
    # Solus mutilib integration

    # Ensure that ldd can use all interpreters, allowing 64-bit host to run ldd
    # against 32-bit files.
    %patch -p1 -i $pkgfiles/0001-ldd-Force-correct-RTLDLIST-for-Solus.patch

    # Enable /usr/lib32 in ldconfig without requiring config files
    %patch -p1 -i $pkgfiles/0002-sysdeps-Add-support-for-usr-lib32-as-a-system-librar.patch

    # Use a stateless ld.so.conf
    %patch -p1 -i $pkgfiles/stateless/0003-elf-ldconfig-Use-a-stateless-ld.so.conf.patch

    # Stateless /etc/shells
    %patch -p1 -i $pkgfiles/stateless/0001-misc-Support-fallback-stateless-shells-path-in-absen.patch

    # Stateless /etc/nsswitch.conf
    %patch -p1 -i $pkgfiles/stateless/0001-Stateless-nsswitch.conf.patch

    # Broken 64-bit unity games
    # https://bugzilla.redhat.com/show_bug.cgi?id=1440287
    %patch -p1 -i $pkgfiles/fix-x64-abi.patch

    # locale data only exists in /usr/lib64 so hardcode it
    %patch -p1 -i $pkgfiles/0001-Hardcode-usr-lib64-path-for-locale.patch

    # Clear Linux backports for performance improvements/regression fixes.
    %patch -p1 -i $pkgfiles/perf/0001-Set-vector-width-and-alignment-to-fix-GCC-AVX-issue.patch
    %patch -p1 -i $pkgfiles/perf/disable-vectorization-even-more.patch
    %patch -p1 -i $pkgfiles/perf/0001-Force-ffsll-to-be-64-bytes-aligned.patch

    # Build glibc with both DT_HASH and DT_GNU_HASH for EasyAntiCheat on linux
    %patch -p1 -i $pkgfiles/reenable_DT_HASH.patch

    mkdir glibc-build
    pushd glibc-build

    if [[ ! -z "${EMUL32BUILD}" ]]; then
        mkdir b32
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export BUILDHOST="i686-pc-linux-gnu"
        export CFLAGS="-O3 -g2 -mtune=generic -march=i686 -mstackrealign"
    else
        mkdir b64
        pushd b64
        export CC="gcc"
        export CXX="g++"
        export BUILDHOST="x86_64-solus-linux"
        if [[ ! -z "${AVX2BUILD}" ]]; then
            export CFLAGS="-O3 -g2 -mtune=haswell -march=x86-64-v3 -mprefer-vector-width=128"
        else
            export CFLAGS="-O3 -g2 -mtune=generic -march=x86-64"
        fi
    fi
    export LDFLAGS="-Wl,-z,max-page-size=0x1000"
    echo "rootsbindir=/usr/sbin" >> configparms
    echo "rtlddir=%libdir%" >> configparms
    echo "sbindir=/usr/sbin" >> configparms
    echo "slibdir=%libdir%" >> configparms
    # these params need to be coming from ypkg (build=)

    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"

    # The minimum kernel should track the supported kernel versions at kernel.org. Look under "longterm" and choose the fourth kernel.
    # Example, at the time of writing this the LTS kernels are 6.6, 6.1, 5.15, 5.10, 5.4, 4.19, and 4.14. Therefore I would choose 5.10 as the kernel for glibc.
    # The point of doing this and not tracking the kernel version of linux-lts is that some users may have manually compiled older kernels or be running
    # in a container. We don't want to break such users, but there still needs to be a cutoff.
    ../../configure \
           --build=${BUILDHOST} \
           --disable-build-nscd \
           --disable-nscd \
           --enable-bind-now \
           --enable-cet \
           --enable-kernel=5.10 \
           --enable-stack-protector=strong \
           --prefix=/usr \
           --mandir=/usr/share/man \
           --infodir=/usr/share/info \
           --libexecdir=%libdir%/misc \
           --libdir=%libdir% \
           --with-pkgversion='Solus'
    popd
    popd
build      : |
    pushd glibc-build
    export LANGUAGE="C"
    export LC_ALL="C"
    export LANG="C"

    if [[ "${EMUL32BUILD}" ]]; then
        pushd b32
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export CFLAGS="-O3 -g2 mtune=generic -march=i686 -Wl,-z,max-page-size=0x1000"
    else
        pushd b64
        export CC="gcc"
        export CXX="g++"
        if [[ ! -z "${AVX2BUILD}" ]]; then
            export CFLAGS="-O3 -g2 -mtune=haswell -march=x86-64-v3 -Wl,-z,max-page-size=0x1000"
        else
            export CFLAGS="-O3 -g2 -mtune=generic -march=x86-64 -Wl,-z,max-page-size=0x1000"
        fi
    fi
    export LDFLAGS="-Wl,-z,max-page-size=0x1000"
    %make

    # Ifdef to prevent running avx2 instructions on non-avx2 machines
    if [[ -z "${AVX2BUILD}" ]]; then
        %make bench-build
    fi

    popd
    popd
install    : |
    pushd glibc-build

    if [[ ! -z "${EMUL32BUILD}" ]]; then
        pushd b32
        %make_install install_root=$installdir

        if [[ -z "${AVX2BUILD}" ]]; then
            install -dm00755 $installdir/lib
            # Interestingly enough, /lib == /lib64 on Solus.
            ln -sv /usr/lib32/ld-linux.so.2 $installdir/lib/ld-linux.so.2
        fi
    else
        pushd b64
        %make_install install_root=$installdir

        if [[ -z "${AVX2BUILD}" ]]; then
            %make_install install_root=$installdir localedata/install-locales

            if [[ -f $installdir/etc/ld.so.cache ]]; then
                rm -v $installdir/etc/ld.so.cache
            fi

            if [[ -f $installdir/etc/localetime ]]; then
                rm -v $installdir/etc/localtime
            fi

            if [[ -d $installdir/usr/share/zoneinfo ]]; then
                rm -rfv $installdir/usr/share/zoneinfo
            fi

            if [[ -f $installdir/usr/sbin/zdump ]]; then
                rm -v $installdir/usr/sbin/zdump
            fi

            # usr-merge
            install -dm00755 $installdir/lib64
            ln -sv /usr/lib64/ld-linux-x86-64.so.2 $installdir/lib64/ld-linux-x86-64.so.2
            install -dm00755 $installdir/sbin
            ln -sv /usr/sbin/ldconfig $installdir/sbin/ldconfig
            ln -sv /usr/sbin/sln $installdir/sbin/sln

            # TODO Rebuild this with --enable-systemtap once it's added to the repo
            # This is a vendored copy from the 4.9 systemtap package, it should be kept in sync with the systemtap version
            install -Dm00644 $pkgfiles/systemtap/{sdt.h,sdt-config.h} -t $installdir/usr/include/sys

            # Install stateless ld.so.conf
            install -Dm00644 $pkgfiles/ld.so.conf $installdir/usr/share/defaults/etc/ld.so.conf

            # iconv cache file
            # LD_LIBRARY_PATH hacks to get this working, fixed in 2.36.
            LD_LIBRARY_PATH=$installdir/%libdir% $installdir/%libdir%/ld-linux-x86-64.so.2 $installdir/usr/sbin/iconvconfig --prefix=$installdir

        fi
    fi

    # Benchmarks
    if [[ -z "${AVX2BUILD}" ]]; then
        for f in benchtests/*; do [ -x $f -a ! -d $f ] && cp -a $f $installdir/usr/bin/; done
    fi

    # Clear out uneeded haswell files
    if [[ ! -z "${AVX2BUILD}" ]]; then
        for nuke in `ls $installdir/%libdir% | grep -v -E "libm.so.6|libm-$version.so|libc.so.6|libc-$version.so|libmvec|libcrypt"`; do
            rm -rfv $installdir/%libdir%/${nuke}
        done
    fi
