From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Sun, 30 Jun 2024 17:34:44 -0500
Subject: [PATCH] solus: Simplify version code for build

Signed-off-by: Reilly Brogan <reilly@reillybrogan.com>
---
 cmd/task/task.go            |  2 +-
 internal/version/version.go | 20 --------------------
 task_test.go                |  5 +++--
 3 files changed, 4 insertions(+), 23 deletions(-)

diff --git a/cmd/task/task.go b/cmd/task/task.go
index 0de90750..6cb4c9d7 100644
--- a/cmd/task/task.go
+++ b/cmd/task/task.go
@@ -59,7 +59,7 @@ func run() error {
 	entrypoint := flags.Entrypoint
 
 	if flags.Version {
-		fmt.Printf("Task version: %s\n", ver.GetVersionWithSum())
+		fmt.Printf("Task version: %s\n", ver.GetVersion())
 		return nil
 	}
 
diff --git a/internal/version/version.go b/internal/version/version.go
index 6bf4b08d..3570014e 100644
--- a/internal/version/version.go
+++ b/internal/version/version.go
@@ -1,29 +1,9 @@
 package version
 
-import (
-	"fmt"
-	"runtime/debug"
-)
-
 var (
 	version = ""
-	sum     = ""
 )
 
-func init() {
-	info, ok := debug.ReadBuildInfo()
-	if !ok || info.Main.Version == "" {
-		version = "unknown"
-	} else {
-		version = info.Main.Version
-		sum = info.Main.Sum
-	}
-}
-
 func GetVersion() string {
 	return version
 }
-
-func GetVersionWithSum() string {
-	return fmt.Sprintf("%s (%s)", version, sum)
-}
diff --git a/task_test.go b/task_test.go
index 0dd489ca..2806b128 100644
--- a/task_test.go
+++ b/task_test.go
@@ -20,6 +20,7 @@ import (
 	"github.com/go-task/task/v3"
 	"github.com/go-task/task/v3/errors"
 	"github.com/go-task/task/v3/internal/filepathext"
+	ver "github.com/go-task/task/v3/internal/version"
 	"github.com/go-task/task/v3/taskfile/ast"
 )
 
@@ -154,13 +155,13 @@ func TestSpecialVars(t *testing.T) {
 		{target: "print-root-dir", expected: toAbs(dir)},
 		{target: "print-taskfile", expected: toAbs(dir) + "/Taskfile.yml"},
 		{target: "print-taskfile-dir", expected: toAbs(dir)},
-		{target: "print-task-version", expected: "unknown"},
+		{target: "print-task-version", expected: ver.GetVersion()},
 		// Included
 		{target: "included:print-task", expected: "included:print-task"},
 		{target: "included:print-root-dir", expected: toAbs(dir)},
 		{target: "included:print-taskfile", expected: toAbs(dir) + "/included/Taskfile.yml"},
 		{target: "included:print-taskfile-dir", expected: toAbs(dir) + "/included"},
-		{target: "included:print-task-version", expected: "unknown"},
+		{target: "included:print-task-version", expected: ver.GetVersion()},
 	}
 
 	for _, dir := range []string{dir, subdir} {
