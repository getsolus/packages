name       : gcc
version    : 15.1.1
release    : 90
source     :
    # - https://ftp.gnu.org/gnu/gcc/gcc-15.1.1/gcc-15.1.1.tar.xz : a7b39bc69cbf9e25826c5a60ab26477001f7c08d85cec04bc0e29cabed6f3cc9
    # Latest in releases/gcc-15
    - git|https://gcc.gnu.org/git/gcc.git : 7317c72b028e057ddbe918ff6968e5e586a35850
homepage   : https://gcc.gnu.org/
license    : GPL-3.0-or-later
component  :
    - system.devel
    - ^g++ : system.devel
    - ^gfortran : system.devel
    - ^gfortran-32bit : emul32
    - ^libgcc : system.base
    - ^libgcc-32bit : emul32
    - ^libstdc++ : system.base
    - ^libstdc++-32bit : emul32
    - ^libgomp : system.base
    - ^libgomp-32bit : emul32
    - ^libgfortran : programming.library
    - ^libgfortran-32bit : emul32
autodep    : false
ccache     : false
mancompress: true
summary    : GNU Compiler Collection
description: |
    The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Java, Ada, and Go, as well as libraries for these languages (libstdc++, libgcj,...). GCC was originally written as the compiler for the GNU operating system. The GNU system was developed to be 100% free software, free in the sense that it respects the user's freedom.
builddeps  :
    - pkgconfig32(libzstd)
    - rust
    - glibc-32bit-devel
    - gcc-ada-32bit
    - gcc-ada
    - isl-devel
rundeps    :
    - mpc
    - mpfr
    - ^g++ : gcc
    - ^gcobal :
        - gcc
        - g++
        - libgcobol
    - ^gccrs :
        - gcc
    - ^gfortran :
        - gcc
        - libgfortran
    - ^libgcc-32bit : libgcc
    - ^libgccjit : gcc
    - ^libgccjit-devel : libgccjit
    - ^libstdc++-32bit : libstdc++
    - ^libgomp-32bit :
        - libgcc-32bit
        - libgomp
    - ^libgfortran-32bit : libgfortran
replaces   :
    - ^libgfortran-32bit : gfortran-32bit
patterns   :
    - ^libgcc :
        - /usr/lib64/libatomic*.so.*
        - /usr/lib64/libgcc_s.so.*
        - /usr/lib64/libquadmath.so.*
        - /usr/share/info/libquadmath.info*
        - /* # No idea why but ypkg errors out during pspec creation if this isn't present
    - main :
        - /usr/bin
        - /usr/lib64/bfd-plugins
        - /usr/lib64/gcc
        - /usr/share/info
        - /usr/share/locale/*/LC_MESSAGES/cpplib.mo
        - /usr/share/locale/*/LC_MESSAGES/gcc.mo
        - /usr/share/man
        - /usr/lib*/*.a
        - /usr/lib*/*.o
        - /usr/lib*/*.so
        - /usr/lib*/*.spec
        - /usr/lib*/libasan*.so*
        - /usr/lib*/libcc1*.so*
        - /usr/lib*/libhwasan*.so*
        - /usr/lib*/libitm*.so*
        - /usr/lib*/liblsan*.so*
        - /usr/lib*/libtsan*.so*
        - /usr/lib*/libubsan*.so*
    - ^g++ :
        - /usr/bin/c++
        - /usr/bin/g++*
        - /usr/bin/*-g++*
        - /usr/bin/*-c++*
        - /usr/include/c++
        - /usr/lib/gcc/x86_64-solus-linux/*/cc1plus
        - /usr/lib/gcc/x86_64-solus-linux/*/g++-mapper-server
        - /usr/lib*/lib*++*.a
        - /usr/lib*/lib*++*.so
        - /usr/share/man/*/g++*
    - ^gcobol :
        - /usr/bin/gcob*
        - /usr/lib64/libgcobol.a
        - /usr/lib64/libgcobol.so
        - /usr/lib64/libgcobol.spec
        - /usr/lib64/gcc/x86_64-solus-linux/*/cobol1
        - /usr/share/gcobol
        - /usr/share/man/*/gcobol*
    - ^gfortran :
        - /usr/bin/*fortran*
        - /usr/lib*/*fortran*.a
        - /usr/lib*/*fortran*.so
        - /usr/lib*/*fortran*.spec
        - /usr/lib/gcc/x86_64-solus-linux/*/f951
        - /usr/lib/gcc/x86_64-solus-linux/*/finclude
        - /usr/lib/gcc/x86_64-solus-linux/*/32/finclude
        - /usr/lib/gcc/x86_64-solus-linux/*/include/*Fortran*.h
        - /usr/share/info/gfortran.info*
        - /usr/share/man/*/*fortran*
    - ^gcc-ada :
        - /usr/bin/gnat*
        - /usr/lib64/gcc/x86_64-solus-linux/*/gnat1
        - /usr/lib64/gcc/x86_64-solus-linux/*/ada*
        - /usr/share/info/gnat*.info*
    - ^gcc-ada-32bit :
        - /usr/lib64/gcc/x86_64-solus-linux/*/32/ada*
    - ^gccrs :
        - /usr/bin/*gccrs
        - /usr/lib64/gcc/x86_64-solus-linux/*/crab1
    - ^libgcc-32bit :
        - /usr/lib32/libatomic*.so.*
        - /usr/lib32/libgcc_s.so.*
        - /usr/lib32/libquadmath.so.*
    - ^libgccjit :
        - /usr/lib64/libgccjit.so.*
    - ^libgccjit-devel :
        - /usr/include/libgccjit*.h
        - /usr/lib64/libgccjit.so
        - /usr/share/info/libgccjit*
    - ^libgcobol :
        - /usr/lib64/libgcobol.so.*
    - ^libgfortran :
        - /usr/lib64/*fortran.so.*
    - ^libgfortran-32bit :
        - /usr/lib32/*fortran.so.*
    - ^libgomp :
        - /usr/lib64/libgomp.so.*
        - /usr/share/info/libgomp.info*
    - ^libgomp-32bit :
        - /usr/lib32/libgomp.so.*
    - ^libstdc++ :
        - /usr/lib64/lib*++*.so.*
        - /usr/lib64/libstdc++.modules.json
        - /usr/share/gcc-*/python/libstdcxx
        - /usr/share/gdb/auto-load/usr/lib64/*
        - /usr/share/locale/*/LC_MESSAGES/libstdc++.mo
    - ^libstdc++-32bit :
        - /usr/lib32/lib*++*.so.*
        - /usr/lib32/libstdc++.modules.json
        - /usr/share/gdb/auto-load/usr/lib32/*
environment: |
    export triplet=x86_64-solus-linux
    # Set sane and safe flags for a compiler build
    export CFLAGS="-mtune=generic -march=x86-64 -g1 -O3 -fstack-protector -pipe -fPIC -Wl,-z,relro -Wl,-z,now -Wl,-z,max-page-size=0x1000"
    export CXXFLAGS="-mtune=generic -march=x86-64 -g1 -O3 -pipe -fPIC -Wl,-z,max-page-size=0x1000"
    export CFLAGS_FOR_TARGET=${CFLAGS}
    export CC=${triplet}-gcc
    export CXX=${triplet}-g++
setup      : |
    %patch -p1 -i $pkgfiles/0002-Use-usr-lib-64-32-x32-for-linker-locations-on-Solus-.patch
    %patch -p1 -i $pkgfiles/optimize.patch
    %patch -p1 -i $pkgfiles/0001-Ignore-Werror-if-GCC_IGNORE_WERROR-environment-varia.patch
    %patch -p1 -i $pkgfiles/0001-libtool-no-rpath.patch
    %patch -p1 -i $pkgfiles/0001-Downstream-Don-t-run-fixincludes-during-install.patch

    function gcc_configure() {
        ../configure \
                 --prefix=/usr \
                 --with-pkgversion='Solus' \
                 --libdir=/usr/lib64 \
                 --libexecdir=/usr/lib64 \
                 --with-arch_32=i686 \
                 --with-bugurl='https://dev.getsol.us/' \
                 --with-build-config=bootstrap-lto-lean \
                 --with-gcc-major-version-only \
                 --with-linker-hash-style=gnu \
                 --with-multilib-list=m32,m64 \
                 --with-system-zlib \
                 --enable-cet \
                 --enable-checking=release \
                 --enable-default-pie \
                 --enable-default-ssp \
                 --enable-gnu-indirect-function \
                 --enable-host-bind-now \
                 --enable-host-pie \
                 --enable-link-serialization \
                 --enable-linker-build-id \
                 --enable-multilib \
                 --enable-plugin \
                 --enable-shared \
                 --enable-threads=yes \
                 --disable-libssp \
                 --build=${triplet} \
                 --target=${triplet} \
                 "$@"
    }

    mkdir gcc_build libgccjit_build

    pushd gcc_build
    gcc_configure \
        --enable-bootstrap \
        --enable-languages=ada,c,c++,cobol,fortran,rust
    popd

    # Build libgccjit separately to avoid building all compilers with enable-host-shared which has a performance penalty
    # I didn't test that but both Arch and Fedora has the same note in their repos
    # TODO: Test that
    # (this is also where libgdiagnostics should be enabled whenever we need that)
    pushd libgccjit_build
    gcc_configure \
        --disable-bootstrap \
        --enable-host-shared \
        --enable-languages=jit
    popd
build      : |
    # Note: If you're working on GCC and want fast build times then use `bootstrap2-lean` instead of `profiledbootstrap`,
    # and `bootstrap-O1` for the build config above instead of `bootstrap-lto-lean`. This cuts build times by ~68%
    env CCACHE_BASEDIR=${pwd}/gcc_build %make -C gcc_build profiledbootstrap -O
    env CCACHE_BASEDIR=${pwd}/libgccjit_build %make -C libgccjit_build all-gcc

    cp -a libgccjit_build/gcc/libgccjit.so* gcc_build/gcc/
install    : |
    %make_install -C gcc_build

    # libgccjit
    DESTDIR="$installdir" %make -C gcc_build/gcc jit.install-common jit.install-info

    # Info files
    for lib in libgomp libitm libquadmath; do
        DESTDIR="$installdir" %make -C gcc_build/${triplet}/${lib} install-info
    done

    sversion=${version%.*.*}
    # Linky linky
    ln -srv $installdir/usr/bin/gcc $installdir/usr/bin/cc

    # Ensure LTO will work properly.
    install -dm 00755 $installdir/%libdir%/bfd-plugins
    ln -srv $installdir/%libdir%/gcc/$triplet/$sversion/liblto_plugin.so $installdir/%libdir%/bfd-plugins/liblto_plugin.so

    # Install gdb files to right location
    install -dm00755 $installdir/usr/share/gdb/auto-load/usr/lib{32,64}
    mv $installdir/usr/lib32/libstdc++.so.*-gdb.py $installdir/usr/share/gdb/auto-load/usr/lib32/.
    mv $installdir/%libdir%/libstdc++.so.*-gdb.py $installdir/usr/share/gdb/auto-load/%libdir%/.
    %python3_compile

    find $installdir/ -name '*.la' -delete -print
