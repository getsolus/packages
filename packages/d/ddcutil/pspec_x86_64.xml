<PISI>
    <Source>
        <Name>ddcutil</Name>
        <Packager>
            <Name>Reilly Brogan</Name>
            <Email>solus@reillybrogan.com</Email>
        </Packager>
        <License>GPL-2.0-or-later</License>
        <PartOf>system.utils</PartOf>
        <Summary xml:lang="en">Query and change Linux monitor settings using DDC/CI and USB</Summary>
        <Description xml:lang="en">ddcutil is a program for querying and changing monitor settings, such as brightness and color levels.

ddcutil uses DDC/CI to communicate with monitors implementing MCCS (Monitor Control Command Set) over I2C. Normally, the video driver for the monitor exposes the I2C channel as devices named /dev/i2c-n. There is also psupport for monitors (such as Apple Cinema and Eizo ColorEdge) that implement MCCS using a USB connection.

A particular use case for ddcutil is as part of color profile management. Monitor calibration is relative to the monitor color settings currently in effect, e.g. red gain. ddcutil allows color related settings to be saved at the time a monitor is calibrated, and then restored when the calibration is applied.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://sources.getsol.us/README.Solus</Archive>
    </Source>
    <Package>
        <Name>ddcutil</Name>
        <Summary xml:lang="en">Query and change Linux monitor settings using DDC/CI and USB</Summary>
        <Description xml:lang="en">ddcutil is a program for querying and changing monitor settings, such as brightness and color levels.

ddcutil uses DDC/CI to communicate with monitors implementing MCCS (Monitor Control Command Set) over I2C. Normally, the video driver for the monitor exposes the I2C channel as devices named /dev/i2c-n. There is also psupport for monitors (such as Apple Cinema and Eizo ColorEdge) that implement MCCS using a USB connection.

A particular use case for ddcutil is as part of color profile management. Monitor calibration is relative to the monitor color settings currently in effect, e.g. red gain. ddcutil allows color related settings to be saved at the time a monitor is calibrated, and then restored when the calibration is applied.
</Description>
        <PartOf>system.utils</PartOf>
        <Files>
            <Path fileType="executable">/usr/bin/ddcutil</Path>
            <Path fileType="library">/usr/lib/modules-load.d/ddcutil.conf</Path>
            <Path fileType="library">/usr/lib/udev/rules.d/60-ddcutil-i2c.rules</Path>
            <Path fileType="library">/usr/lib/udev/rules.d/60-ddcutil-usb.rules</Path>
            <Path fileType="library">/usr/lib64/libddcutil.so.5</Path>
            <Path fileType="library">/usr/lib64/libddcutil.so.5.0.0</Path>
            <Path fileType="data">/usr/share/ddcutil/data/60-ddcutil-i2c.rules</Path>
            <Path fileType="data">/usr/share/ddcutil/data/60-ddcutil-usb.rules</Path>
            <Path fileType="data">/usr/share/ddcutil/data/90-nvidia-i2c.conf</Path>
            <Path fileType="data">/usr/share/ddcutil/data/nvidia-i2c.conf</Path>
            <Path fileType="man">/usr/share/man/man1/ddcutil.1</Path>
        </Files>
    </Package>
    <Package>
        <Name>ddcutil-devel</Name>
        <Summary xml:lang="en">Development files for ddcutil</Summary>
        <Description xml:lang="en">ddcutil is a program for querying and changing monitor settings, such as brightness and color levels.

ddcutil uses DDC/CI to communicate with monitors implementing MCCS (Monitor Control Command Set) over I2C. Normally, the video driver for the monitor exposes the I2C channel as devices named /dev/i2c-n. There is also psupport for monitors (such as Apple Cinema and Eizo ColorEdge) that implement MCCS using a USB connection.

A particular use case for ddcutil is as part of color profile management. Monitor calibration is relative to the monitor color settings currently in effect, e.g. red gain. ddcutil allows color related settings to be saved at the time a monitor is calibrated, and then restored when the calibration is applied.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="9">ddcutil</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/ddcutil_c_api.h</Path>
            <Path fileType="header">/usr/include/ddcutil_macros.h</Path>
            <Path fileType="header">/usr/include/ddcutil_status_codes.h</Path>
            <Path fileType="header">/usr/include/ddcutil_types.h</Path>
            <Path fileType="library">/usr/lib64/cmake/ddcutil/FindDDCUtil.cmake</Path>
            <Path fileType="library">/usr/lib64/libddcutil.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/ddcutil.pc</Path>
        </Files>
    </Package>
    <History>
        <Update release="9">
            <Date>2023-12-03</Date>
            <Version>2.0.0</Version>
            <Comment>Packaging update</Comment>
            <Name>Reilly Brogan</Name>
            <Email>solus@reillybrogan.com</Email>
        </Update>
    </History>
</PISI>