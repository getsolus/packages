name       : dotnet-8
version    : 8.0.17
release    : 2
source     :
    - https://github.com/dotnet/dotnet/archive/refs/tags/v8.0.17.tar.gz : 17d82982a74e2f255ad6d171b72b317471095704c27be58db95a0cb67d237c12
homepage   : https://dot.net
license    : MIT
component  : programming.dotnet
summary    :
    - .NET 8 runtime
    - sdk : .NET 8 Development Kit
    - source-built-artifacts : Internal package for building .NET
description: .NET is a free, cross-platform, open-source developer platform for building many kinds of applications. It can run programs written in multiple languages, with C# being the most popular.
networking : true
libsplit   : false
clang      : true
strip      : false
builddeps  :
    - pkgconfig(RapidJSON)
    - pkgconfig(icu-i18n)
    - pkgconfig(krb5)
    - pkgconfig(libcurl)
    - pkgconfig(libssl)
    - pkgconfig(libunwind)
    - pkgconfig(lttng-ust)
    - pkgconfig(zlib)
    - dotnet-8-sdk
    - dotnet-8-source-built-artifacts
    - git
    - jq
    - lldb-devel
rundeps    :
    - dotnet-shared
    - libicu
    - sdk :
        - dotnet-8
setup      : |
    for p in $pkgfiles/*.patch; do
        %patch -p1 -i $p
    done
build      : |
    # EXTRA_* flags are passed to the build system
    export EXTRA_CFLAGS="$CFLAGS"
    export EXTRA_CXXFLAGS="$CXXFLAGS"
    export EXTRA_LDFLAGS="$LDFLAGS"

    # .net 8 requires write permissions
    cp -a /usr/lib64/dotnet previously-built
    ln -s /usr/share/dotnet/source-built-artifacts/Private.SourceBuilt.Artifacts.8*.tar.gz prereqs/packages/archive/
    ln -s /usr/share/dotnet/source-built-artifacts/Private.SourceBuilt.Prebuilts.8*.tar.gz prereqs/packages/archive/
    if [ ! -f prereqs/packages/archive/Private.SourceBuilt.Artifacts.*.tar.gz ]; then
        echo "Error: Private.SourceBuilt.Artifacts tarball not found!"
        exit 1
    fi
    if [ ! -f prereqs/packages/archive/Private.SourceBuilt.Prebuilts.*.tar.gz ]; then
        echo "Error: Private.SourceBuilt.Prebuilts tarball not found!"
        exit 1
    fi

    # setting `version` (any case) clobbers the msbuild version target
    unset version

    ./build.sh \
        --clean-while-building \
        --release-manifest $pkgfiles/release.json \
        --with-sdk previously-built \
        -- -maxCpuCount:%YJOBS% \
        /p:ContinueOnPrebuiltBaselineError=true \
        /p:TargetRid=solus.4-x64
install    : |
    # Create dotnet directory structure
    install -dm 755 $installdir/usr/lib64/dotnet

    # Extract and install SDK
    bsdtar xf artifacts/x64/Release/dotnet-sdk-*.tar.gz \
        --no-same-owner -C $installdir/usr/lib64/dotnet/ \
        host metadata packs sdk sdk-manifests shared templates

    rm -r $installdir/usr/lib64/dotnet/packs/NETStandard.Library.Ref
    # Fix permissions
    for file_pattern in 'apphost' 'createdump' 'singlefilehost' 'lib*so'; do
        find $installdir/usr/lib64/dotnet/ -type f -name "$file_pattern" -exec chmod +x {} \;
    done
    for file_pattern in '*.a' '*.dll' '*.json' '*.pdb' '*.props' '*.pubxml' '*.targets' '*.txt' '*.xml'; do
        find $installdir/usr/lib64/dotnet/ -type f -name "$file_pattern" -exec chmod -x {} \;
    done
    find $installdir/usr/lib64/dotnet/ -type f -name '*.h' -exec chmod 0644 {} \;

    # Install source-built artifacts for bootstrapping
    install -dm00755 $installdir/usr/share/dotnet/source-built-artifacts
    install -m00644 artifacts/x64/Release/Private.SourceBuilt.Artifacts.*.tar.gz $installdir/usr/share/dotnet/source-built-artifacts/
    install -m00644 artifacts/x64/Release/Private.SourceBuilt.Prebuilts.*.tar.gz $installdir/usr/share/dotnet/source-built-artifacts/
patterns   :
    - sdk :
        - /usr/lib64/dotnet/metadata
        - /usr/lib64/dotnet/packs
        - /usr/lib64/dotnet/sdk
        - /usr/lib64/dotnet/sdk-manifests
        - /usr/lib64/dotnet/templates
    - source-built-artifacts :
        - /usr/share/dotnet/source-built-artifacts
