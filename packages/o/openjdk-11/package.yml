name       : openjdk-11
version    : 11.0.26
release    : 26
source     :
    - https://github.com/openjdk/jdk11u/archive/refs/tags/jdk-11.0.26-ga.tar.gz : 85b260f8ac5ed26b9881e353700c98e768d8cb17a484ef062fb0aa56494a32bf
license    : GPL-2.0-only WITH Classpath-exception-2.0
component  : programming.java
homepage   : https://openjdk.java.net/
summary    :
    - Open implementation of Oracle's Java Development Kit, major version 11
description:
    - Open implementation of Oracle's Java Development Kit, major version 11. This package includes the JDK, the JRE is not separately provided.
clang      : true
builddeps  :
    - pkgconfig(alsa)
    - pkgconfig(cups)
    - pkgconfig(fontconfig)
    - pkgconfig(lcms2)
    - pkgconfig(libjpeg)
    - pkgconfig(x11)
    - pkgconfig(xext)
    - pkgconfig(xrandr)
    - pkgconfig(xrender)
    - pkgconfig(xt)
    - pkgconfig(xtst)
    - pkgconfig(xxf86vm)
    - giflib-devel
    # - gradle
    - openjdk-11
checkdeps  :
    - jtreg
mancompress: true
environment: |
    # ccache needs to be enabled via conf option, not by setting the path
    if [[ " ${PATH[*]} " =~ "ccache" ]]; then
        export CCACHE_PATH=$PATH
        export PATH="${PATH//\/usr\/lib64\/ccache\/bin:/}"
        export extra_conf_opts="--enable-ccache"
    fi

    # The internal debug symbol parsing doesn't support compressed symbols
    export LDFLAGS="${LDFLAGS} -Wl,--compress-debug-sections=none"
setup      : |
    %patch -p1 -i $pkgfiles/0001-Use-current-directory-as-backup-for-user-prefs.patch
    %patch -p1 -i $pkgfiles/0001-Dont-echo-_JAVA_OPTIONS.patch

    # Clang/LLVM fixes
    %patch -p1 -i $pkgfiles/0001-Backport-change-in-markOop-functionality-from-JDK-14.patch
    %patch -p1 -i $pkgfiles/0001-The-jdk-uses-tagged-pointers-on-this-which-clang-kno.patch
    %patch -p1 -i $pkgfiles/0001-8202171-Some-oopDesc-functions-compare-this-with-NUL.patch
    %patch -p1 -i $pkgfiles/0001-ftbfs-llvm-17.patch
    %patch -p0 -i $pkgfiles/ftbfs-clang-19.patch

    # Fixes test failures with zlib-ng
    %patch -p1 -i $pkgfiles/0001-8253952-Refine-ZipOutputStream.putNextEntry-to-recal.patch
    %patch -p1 -i $pkgfiles/0001-8277087-ZipException-zip-END-header-not-found-at-Zip.patch
    %patch -p1 -i $pkgfiles/0001-8299748-java-util-zip-Deinflate.java-failing-on-s390.patch

    chmod +x configure
    %configure --prefix="$installdir/usr" \
        --with-jvm-variants=server \
        --with-jvm-features="shenandoahgc" \
        --with-boot-jdk="/usr/lib64/openjdk-11" \
        --with-native-debug-symbols=internal \
        --with-toolchain-type=clang \
        --with-version-build="4" \
        --with-version-pre="" \
        --with-version-opt="solus" \
        --with-stdc++lib=dynamic \
        --with-freetype=system \
        --with-giflib=system \
        --with-harfbuzz=system \
        --with-jtreg=/usr/share/jtreg7 \
        --with-lcms=system \
        --with-libjpeg=system \
        --with-libpng=system \
        --with-zlib=system \
        --with-vendor-name=Solus \
        --with-vendor-url=https://getsol.us/ \
        --with-vendor-bug-url=https://github.com/getsolus/packages/issues \
        --with-vendor-vm-bug-url=https://github.com/getsolus/packages/issues \
        --enable-unlimited-crypto \
        --disable-warnings-as-errors \
        --disable-absolute-paths-in-output \
        --with-extra-cflags="$CFLAGS" \
        --with-extra-cxxflags="$CXXFLAGS" \
        --with-extra-ldflags="$LDFLAGS" \
        --with-cacerts-file=%libdir%/openjdk-11/lib/security/cacerts \
        --with-jobs=%YJOBS% \
        $extra_conf_opts
build      : |
    # Build OpenJDK
    make images test-image
install    : |
    install -Ddm00755 $installdir/%libdir%/
    install -dm00755 $installdir/usr/include/openjdk-11/
    install -dm00755 $installdir/usr/share/applications/

    make install

    # Binaries
    mv $installdir/usr/jvm/openjdk-* $installdir/%libdir%/openjdk-11/
    rm -rfv $installdir/usr/jvm/
    rm -rfv $installdir/usr/bin/

    # Remove license files and demo files
    rm -rfv $installdir/%libdir%/openjdk-11/{legal,demo}/

    # Headers
    pushd build/linux-x86_64-*/
    cp -ar jdk/include/* $installdir/usr/include/openjdk-11/
    # Symlink header files (because some apps look for them in $JAVA_HOME)
    ln -srv $installdir/usr/include/openjdk-11/ $installdir/%libdir%/openjdk-11/include/
    popd

    # Man pages
    mv $installdir/%libdir%/openjdk-11/man/ $installdir/usr/share/
    find $installdir/usr/share/man/ -type f -print -exec rename -- ".1" "-11.1" {} \;
    # Remove pre-existing symlink first
    rm -v $installdir/usr/share/man/ja
    mv -f $installdir/usr/share/man/ja_JP.UTF-8/ $installdir/usr/share/man/ja/

    # Add java-11-jar.desktop into usable apps
    install -Dm 00644 $pkgfiles/java-11-jar.desktop $installdir/usr/share/applications/

    # Link system JVM installations under /usr/lib64/jvm so that tools that scan the system for JVMs can easily find them
    install -dm00755 $installdir/%libdir%/jvm
    ln -srv $installdir/%libdir%/openjdk-11 $installdir/%libdir%/jvm/openjdk-11

# Tests take a long time so should be disabled before pushing
# Note that some of these tests can OOM if you don't have enough system memory (32GB+ recommended)
# If you still get OOMs even with that much memory try reducing the number of jobs in eopkg.conf,
# or closing running applications so as to appease the openjdk (yes, it's that bad)

# Some jobs that make use of ptrace will fail locally unless you run `echo 0 > /proc/sys/kernel/yama/ptrace_scope` as root
# check      : |
#     # You can add "RUN_PROBLEM_LISTS=true;" to the JTREG key below to run all tests in the ProblemList instead of excluding them.
#     # This is useful to see if any tests have been fixed in a new version JTREG="EXTRA_PROBLEM_LISTS=$pkgfiles/ProblemList.txt"
#     make JOBS=%YJOBS% run-test TEST="tier1 gtest:all" JTREG="EXTRA_PROBLEM_LISTS=$pkgfiles/ProblemList.txt"
patterns   :
    - devel :
        - /usr/lib64/openjdk-11/lib/src.zip
        - /usr/lib64/openjdk-11/include/
