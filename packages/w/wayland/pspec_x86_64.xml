<PISI>
    <Source>
        <Name>wayland</Name>
        <Homepage>https://wayland.freedesktop.org/</Homepage>
        <Packager>
            <Name>Muhammad Alfi Syahrin</Name>
            <Email>ems1000.syahrin@gmail.com</Email>
        </Packager>
        <License>MIT</License>
        <PartOf>desktop.wayland</PartOf>
        <Summary xml:lang="en">Wayland is intended as a simpler replacement for X, easier to develop and maintain.</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://sources.getsol.us/README.Solus</Archive>
    </Source>
    <Package>
        <Name>wayland</Name>
        <Summary xml:lang="en">Wayland is intended as a simpler replacement for X, easier to develop and maintain.</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>desktop.wayland</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/libwayland-client.so.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-client.so.0.22.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-cursor.so.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-cursor.so.0.22.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-egl.so.1</Path>
            <Path fileType="library">/usr/lib64/libwayland-egl.so.1.22.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-server.so.0</Path>
            <Path fileType="library">/usr/lib64/libwayland-server.so.0.22.0</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-32bit</Name>
        <Summary xml:lang="en">32-bit libraries for wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>emul32</PartOf>
        <RuntimeDependencies>
            <Dependency release="29">wayland</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/libwayland-client.so.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-client.so.0.22.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-cursor.so.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-cursor.so.0.22.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-egl.so.1</Path>
            <Path fileType="library">/usr/lib32/libwayland-egl.so.1.22.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-server.so.0</Path>
            <Path fileType="library">/usr/lib32/libwayland-server.so.0.22.0</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-32bit-devel</Name>
        <Summary xml:lang="en">Development files for 32-bit wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="29">wayland-32bit</Dependency>
            <Dependency release="29">wayland-devel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/libwayland-client.so</Path>
            <Path fileType="library">/usr/lib32/libwayland-cursor.so</Path>
            <Path fileType="library">/usr/lib32/libwayland-egl.so</Path>
            <Path fileType="library">/usr/lib32/libwayland-server.so</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-client.pc</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-cursor.pc</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-egl-backend.pc</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-egl.pc</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-scanner.pc</Path>
            <Path fileType="data">/usr/lib32/pkgconfig/wayland-server.pc</Path>
        </Files>
    </Package>
    <Package>
        <Name>wayland-devel</Name>
        <Summary xml:lang="en">Development files for wayland</Summary>
        <Description xml:lang="en">Wayland is a protocol for a compositor to talk to its clients as well as a C library implementation of that protocol. The compositor can be a standalone display server running on Linux kernel modesetting and evdev input devices, an X application, or a wayland client itself. The clients can be traditional applications, X servers (rootless or fullscreen) or other display servers.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="29">wayland</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="executable">/usr/bin/wayland-scanner</Path>
            <Path fileType="header">/usr/include/wayland-client-core.h</Path>
            <Path fileType="header">/usr/include/wayland-client-protocol.h</Path>
            <Path fileType="header">/usr/include/wayland-client.h</Path>
            <Path fileType="header">/usr/include/wayland-cursor.h</Path>
            <Path fileType="header">/usr/include/wayland-egl-backend.h</Path>
            <Path fileType="header">/usr/include/wayland-egl-core.h</Path>
            <Path fileType="header">/usr/include/wayland-egl.h</Path>
            <Path fileType="header">/usr/include/wayland-server-core.h</Path>
            <Path fileType="header">/usr/include/wayland-server-protocol.h</Path>
            <Path fileType="header">/usr/include/wayland-server.h</Path>
            <Path fileType="header">/usr/include/wayland-util.h</Path>
            <Path fileType="header">/usr/include/wayland-version.h</Path>
            <Path fileType="library">/usr/lib64/libwayland-client.so</Path>
            <Path fileType="library">/usr/lib64/libwayland-cursor.so</Path>
            <Path fileType="library">/usr/lib64/libwayland-egl.so</Path>
            <Path fileType="library">/usr/lib64/libwayland-server.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-client.pc</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-cursor.pc</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-egl-backend.pc</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-egl.pc</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-scanner.pc</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/wayland-server.pc</Path>
            <Path fileType="data">/usr/share/aclocal/wayland-scanner.m4</Path>
            <Path fileType="data">/usr/share/wayland/wayland-scanner.mk</Path>
            <Path fileType="data">/usr/share/wayland/wayland.dtd</Path>
            <Path fileType="data">/usr/share/wayland/wayland.xml</Path>
        </Files>
    </Package>
    <History>
        <Update release="29">
            <Date>2023-10-30</Date>
            <Version>1.22.0</Version>
            <Comment>Packaging update</Comment>
            <Name>Muhammad Alfi Syahrin</Name>
            <Email>ems1000.syahrin@gmail.com</Email>
        </Update>
    </History>
</PISI>