name       : element
version    : 1.12.0
release    : 206
homepage   : https://element.io/
source     :
    - git|https://github.com/vector-im/element-desktop.git : 3e478b88ce9e8e80b6651585e48de4295c76b0bb
    - git|https://github.com/vector-im/element-web.git : 0b5b1a8dba29f4142435c673b00f0704eade1dda
license    : Apache-2.0
component  : network.im
networking : true
summary    : A glossy Matrix collaboration client for desktop.
description: |
    All-in-one secure chat app for teams, friends and organisations. Keeps conversations in your control, safe from data-mining and ads. Talk to everyone through the open global Matrix network, protected by proper end-to-end encryption.
replaces   :
    - riot
builddeps  :
    - pkgconfig(alsa)
    - pkgconfig(atspi-2)
    - pkgconfig(gbm)
    - pkgconfig(gconf-2.0)
    - pkgconfig(gdk-3.0)
    - pkgconfig(libeconf)
    - pkgconfig(libsecret-1)
    - pkgconfig(pango)
    - pkgconfig(sqlcipher)
    - pkgconfig(xcomposite)
    - pkgconfig(xcursor)
    - pkgconfig(xrandr)
    - pkgconfig(xscrnsaver)
    - pkgconfig(xtst)
    - git
    - jq
    - libxcrypt-compat
    - nodejs-22
    - rust
    - yarn
rundeps    :
    - libsecret
    - sqlcipher
environment: |
    export PATH="/usr/lib64/nodejs-22/bin/:$PATH"
setup      : |
    %apply_patches

    # Copy element-web to the build directory
    cp -a $sources/element-web.git element-web

    # Disable updates/tracking, enable labs settings
    jq '.update_base_url = null | .posthog = null | .show_labs_settings = true' \
        element.io/release/config.json > config.json

    # Perform yarn install on both
    yarn install --frozen-lockfile --network-timeout 180000
    yarn --cwd element-web install --frozen-lockfile --network-timeout 180000
build      : |
    # Build element-web
    yarn --cwd element-web build

    # Build element-desktop
    yarn run build:native
    yarn run build
install    : |
    # Installdir for Element
    element_installdir=$installdir/usr/share/element

    install -dm00644 $element_installdir
    cp -Rv dist/linux-unpacked/* $element_installdir
    cp -Rv element-web/webapp $element_installdir/resources/

    # Wrapper script
    install -Dm00755 $pkgfiles/electron-desktop.sh $installdir/usr/bin/element-desktop

    # Install configuration
    install -Dm00644 config.json $element_installdir/resources/webapp/

    # Install Icons
    install -Dm00644 build/icon.png $installdir/usr/share/icons/hicolor/512x512/apps/element-desktop.png
    # Symlink for existing .desktop files
    ln -s element-desktop.png $installdir/usr/share/icons/hicolor/512x512/apps/element.png

    # Fix Wayland appid
    package_json=$element_installdir/resources/app.asar.unpacked/package.json
    tmp=$(mktemp)
    jq ".desktopName = \"Element.desktop\"" $package_json > "$tmp" && mv "$tmp" $package_json
    chmod 644 $package_json

    # Desktop File
    install -Dm00644 $pkgfiles/Element.desktop $installdir/usr/share/applications/Element.desktop

    # appstream data
    install -Dm00644 $pkgfiles/element.appdata.xml $installdir/usr/share/metainfo/element.appdata.xml
