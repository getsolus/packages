name       : eopkg
version    : 4.1.2
release    : 9
source     :
    - git|https://github.com/getsolus/eopkg : 515f101c5076d50b032169de4c366cc392d554cc
    - git|https://github.com/getsolus/PackageKit.git : 48fccbbc6cf48d578588b0cbfb253ce97a4dde1a
homepage   : https://github.com/getsolus/eopkg
license    : GPL-2.0-or-later
component  : system.base
summary    :
    - The Solus package manager (python3 eopkg.bin nuitka-compiled version)
    - python-eopkg : The Solus package manager (pure python3 eopkg.py3 version)
description:
    - The Solus package manager (python3 eopkg.bin nuitka-compiled version)
    - python-eopkg : The Solus package manager (pure python3 eopkg.py3 version)
strip      : no
debug      : no
# Sadly necessary for now to deal with rel8 having the bad "reorder eopkg code"
# AND depending on an updated, versioned glibc version.
# FIXME: Remove `autodep: no` for the eopkg package in the epoch bumped repo
autodep    : no
builddeps  :
    - pkgconfig(packagekit-glib2)
    - pkgconfig(python3)
    - iksemel-devel
    - nuitka
    - pandoc
    - patchelf
    - python-build
    - python-installer
    - python-magic
    - python-ordered-set
    - python-packaging
    - python-wheel
    - python-xattr
    - python-zstandard
rundeps    :
    - glibc
    - ^python-eopkg :
        - iksemel
        - python-ordered-set
        - python-xattr
setup      : |
    # get rid of any existing lines w/git ref version info
    sed "/__version__ += /d" -i pisi/__init__.py
    # Show clean version info
    grep -Hn version pisi/__init__.py
    # append the git ref to __version__ on a new line
    gawk -i inplace \
        'BEGIN { "git rev-parse --short HEAD" | getline gitref } { print };
         /__version__ = / { printf "%s %s\n", $1, "+= \" (" gitref ")\"" };' \
        pisi/__init__.py
    # Verify added git ref version info for build introspection purposes
    grep -Hn version pisi/__init__.py

    %python3_setup
build      : |
    # This prevents the dynamic loader and glibc from attempting to resolve shared objects via hwcaps,
    # and effectively forces nuitka to build with x86_64-v1 (OG AMD64). Note that more flags may need
    # to be added in the future to guard against either x86_64-v2, x86_64-v3 or x86_64-v4 hwcaps being used.
    export GLIBC_TUNABLES=glibc.cpu.hwcaps=-AVX

    # Note: we need to ensure that ca-certs, libmagic, openssl, and zlib are included
    #       in the standalone package (all are part of system.base, so not listed in
    #       builddeps for now).
    #       The context is that the py3 ssl module depends on openssl and openssl needs
    #       ca-certs to be able to check https connections.

    # We're not actually using self-execution. In this case, eopkg is using the -c flag as shorthand for --component, rather than for passing the program as a string (as is default python behavior).
    nuitka3 --onefile --include-module=dbm.gnu --show-scons --no-deployment-flag=self-execution $workdir/eopkg.py3
    nuitka3 --onefile --include-module=dbm.gnu $sources/PackageKit.git/backends/eopkg/eopkgBackend.py
install    : |
    # install the normal pure py3 stuff
    %python3_install

    # .py3 ensures no conflict w/eopkg py2 stuff (shuffle it into the ^python-eopkg pattern later)
    for exe in eopkg lseopkg uneopkg; do
        mv -v $installdir/usr/bin/${exe} $installdir/usr/bin/${exe}.py3
    done

    # install the nuitka-compiled eopkg PackageKit backend
    install -Dm0755 $workdir/eopkgBackend.bin $installdir/usr/share/PackageKit/helpers/eopkg/eopkgBackend.bin

    # install the compiled eopkg.bin nuitka standalone thing
    install -Dm0755 $workdir/eopkg.py3.bin $installdir/usr/bin/eopkg.bin

    ## BEGIN post epoch ownership changes
    # This makes eopkg.bin the default package manager on Solus
    #ln -srv $installdir/usr/bin/eopkg.bin $installdir/usr/bin/eopkg
    #ln -srv $installdir/usr/bin/eopkg.bin $installdir/usr/bin/eopkg-cli

    # If we want to make python-eopkg take over the remaining pisi symlinks at some point
    # (patterned into the python-eopkg package)
    ##test -f $installdir/usr/bin/check-newconfigs.py3 \
    ##    && ln -srv $installdir/usr/bin/check-newconfigs.py3 $installdir/usr/bin/check-newconfigs.py
    #ln -srv $installdir/usr/bin/lseopkg.py3 $installdir/usr/bin/lseopkg
    ##ln -srv $installdir/usr/bin/lseopkg.py3 $installdir/usr/bin/lspisi
    ##test -f $installdir/usr/bin/revdep-rebuild.py3 \
    ##    && ln -srv $installdir/usr/bin/revdep-rebuild.py3 $installdir/usr/bin/revdep-rebuild
    #ln -srv $installdir/usr/bin/uneopkg.py3 $installdir/usr/bin/uneopkg
    ##ln -srv $installdir/usr/bin/uneopkg.py3 $installdir/usr/bin/unpisi

    # man page is re-generated by eopkg_build.py if pandoc is in builddeps
    #install -Dm0644 $workdir/dist/man/eopkg.1 $installdir/usr/share/man/man1/eopkg.1

    # install default eopkg config files (eopkg.conf will be overridden)
    #install -Dm0644 $installdir/usr/lib/python3.11/site-packages/pisi/data/eopkg.conf $installdir/usr/share/defaults/eopkg/eopkg.conf
    #install -Dm0644 $pkgfiles/mirrors.conf $installdir/usr/share/defaults/eopkg/mirrors.conf
    #install -Dm0644 $pkgfiles/mirrors.conf $installdir/usr/share/defaults/eopkg/sandbox.conf
    ## END post epoch ownership changes
replaces   :
    - eopkg4-bin
patterns   :
    # This patterns follows our established practice of using python-<something> for pure python stuff
    # It also conveniently replaces the existing python-eopkg standalone package (thanks for the idea Joey!)
    - ^python-eopkg :
        - /usr/lib/python3.*/site-packages/eopkg*
        - /usr/lib/python3.*/site-packages/pisi
        - /usr/bin/*eopkg.py3
        - /usr/bin/??eopkg
    # Not available/ported (yet)
    #    - /usr/bin/check-newconfigs.py
    #    - /usr/bin/lspisi
    #    - /usr/bin/revdep-rebuild
    #    - /usr/bin/unpisi
