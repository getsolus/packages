/*
A branding component can ship a stylesheet (like this one)
which is applied to parts of the Calamares user-interface.
In principle, all parts can be styled through CSS.
Missing parts should be filed as issues.

The IDs are based on the object names in the C++ code.
You can use the Debug Dialog to find out object names:
  - Open the debug dialog
  - Choose tab *Tools*
  - Click *Widget Tree* button
The list of object names is printed in the log.

Documentation for styling Qt Widgets through a stylesheet
can be found at
    https://doc.qt.io/qt-5/stylesheet-examples.html
    https://doc.qt.io/qt-5/stylesheet-reference.html
In Calamares, styling widget classes is supported (e.g.
using `QComboBox` as a selector).

This example stylesheet has all the actual styling commented out.
The examples are not exhaustive.

*/

/*

Solus Calamares Theme

*/

/* ########## MAIN APPLICATION WINDOW ########## */

#mainapp {
}

#sidebarMenuApp {
    font: 18px;
}

QWidget {
    font: 14px;
    color: #000000;
}

QListWidget::item:alternate {
    color: #353945
}

QDialogButtonBox {
    dialogbuttonbox-buttons-have-icons: 0;
}

#debugButton {
	background-color: none;
	font: 12px;
	color: #edecf0;
    	height: 32px;
    	border: none;
}


#debugButton:hover {
	color: #80bfff;
}

#aboutButton {
	background-color: none;
	font: 12px;
	color: #edecf0;
    	height: 32px;
    	border: none;
}

#aboutButton:hover {
	color: #80bfff;
}

/*** Partitioning module.
 *
 * Many moving parts, which you will need to experiment with.
 */

/*
#bootInfoIcon { }
#bootInfoLable { }
#deviceInfoIcon { }
#defineInfoLabel { }
#scrollAreaWidgetContents { }
#partitionBarView { }
*/

/*** Licensing module.
 *
 * The licensing module paints individual widgets for each of
 * the licenses. The item can be collapsed or expanded.
 */

/*
#licenseItem {  }
#licenseItemFullText {  }
*/
