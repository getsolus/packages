name       : rocrand
version    : 5.5.1
release    : 1
source     :
    - git|https://github.com/ROCmSoftwarePlatform/rocRAND.git : rocm-5.5.1
homepage   : https://github.com/ROCmSoftwarePlatform/rocRAND
license    : MIT
component  : programming.library
summary    : RAND library for HIP programming language
description: |
    rocRAND provides functions that generate pseudo-random and quasi-random numbers. It is implemented in the HIP programming language and optimised for AMD's latest discrete GPUs. It is designed to run on top of AMD's Radeon Open Compute ROCm runtime, but it also works on CUDA enabled GPUs.
clang      : yes
builddeps  :
    - rocm-cmake
    - rocm-hip-devel
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
        # ["AMDGPU_TARGETS"]="gfx1030"
        # ["HCC_AMDGPU_TARGETS"]="gfx1030"
    )

    for name in "${!rocm_vars[@]}"; do
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    export CXXFLAGS="${CXXFLAGS/-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=32/-fcf-protection=none}"
setup      : |
    %cmake_ninja $ROCM_CMAKE_FLAGS \
                 -DCMAKE_CXX_COMPILER=hipcc \
                 -DBUILD_HIPRAND=OFF \
build      : |
    %ninja_build
install    : |
    %ninja_install

    mv $installdir/usr/lib $installdir/%libdir%
    rm -rf $installdir/usr/*rand
