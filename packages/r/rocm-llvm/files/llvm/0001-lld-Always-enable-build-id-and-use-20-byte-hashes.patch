From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Thu, 12 Dec 2024 13:14:41 -0600
Subject: [PATCH] lld: Always enable build-id and use 20-byte hashes

Always ensure that build-id is used, and ensure that is is 20bytes in length. If the user does not want this behavior they can use `--build-id=none` explicitly.

Note that though this patch uses "sha1" LLVM actually uses the BLAKE3 algorithm and truncates the output after the first 20 bytes.
---
 lld/ELF/Config.h   | 2 +-
 lld/ELF/Driver.cpp | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/lld/ELF/Config.h b/lld/ELF/Config.h
index 28726d48e428..5b2a1541e529 100644
--- a/lld/ELF/Config.h
+++ b/lld/ELF/Config.h
@@ -351,7 +351,7 @@ struct Config {
   GcsPolicy zGcs;
   bool power10Stubs;
   ARMVFPArgKind armVFPArgs = ARMVFPArgKind::Default;
-  BuildIdKind buildId = BuildIdKind::None;
+  BuildIdKind buildId = BuildIdKind::Sha1;
   SeparateSegmentKind zSeparate;
   ELFKind ekind = ELFNoneKind;
   uint16_t emachine = llvm::ELF::EM_NONE;
diff --git a/lld/ELF/Driver.cpp b/lld/ELF/Driver.cpp
index bcc7971042c6..7a0a4006a099 100644
--- a/lld/ELF/Driver.cpp
+++ b/lld/ELF/Driver.cpp
@@ -900,7 +900,7 @@ static std::pair<BuildIdKind, SmallVector<uint8_t, 0>>
 getBuildId(opt::InputArgList &args) {
   auto *arg = args.getLastArg(OPT_build_id);
   if (!arg)
-    return {BuildIdKind::None, {}};
+    return {BuildIdKind::Sha1, {}};
 
   StringRef s = arg->getValue();
   if (s == "fast")
@@ -916,7 +916,7 @@ getBuildId(opt::InputArgList &args) {
 
   if (s != "none")
     error("unknown --build-id style: " + s);
-  return {BuildIdKind::None, {}};
+  return {BuildIdKind::Sha1, {}};
 }
 
 static std::pair<bool, bool> getPackDynRelocs(opt::InputArgList &args) {
