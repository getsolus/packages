name       : rocm-hip
version    : 5.5.1
release    : 5
source     :
    - https://github.com/ROCm-Developer-Tools/HIP/archive/refs/tags/rocm-5.5.1.tar.gz#HIP-5.5.1.tar.gz : 1f5f6bb72d8d64335ccc8242ef2e2ea8efeb380cce2997f475b1ee77528d9fb4
    - https://github.com/ROCm-Developer-Tools/ROCclr/archive/refs/tags/rocm-5.5.1.tar.gz#ROCclr-5.5.1.tar.gz : 1375fc7723cfaa0ae22a78682186d4804188b0a54990bfd9c0b8eb421b85e37e
    - https://github.com/RadeonOpenCompute/ROCm-OpenCL-Runtime/archive/refs/tags/rocm-5.5.1.tar.gz#ROCm-OpenCL-Runtime-5.5.1.tar.gz : a8a62a7c6fc5398406d2203b8cb75621a24944688e545d917033d87de2724498
    - https://github.com/ROCm-Developer-Tools/hipamd/archive/refs/tags/rocm-5.5.1.tar.gz#hipamd-5.5.1.tar.gz : 9c8cb7611b3a496a0e9db92269143ee33b608eb69a8384957ace04e135ac90e9
    - https://github.com/ROCm-Developer-Tools/roctracer/archive/refs/tags/rocm-5.5.1.tar.gz#roctracer-5.5.1.tar.gz : 3afc31ebfdb14b0365185ca6b9326a83b1503a94a51d910f5ce7ced192d8c133
homepage   : https://rocm.docs.amd.com/projects/HIP
component  : programming.devel
summary    : AMD ROCm HIP
license    : MIT
description: |
    HIP is a C++ Runtime API and Kernel Language that allows developers to create portable applications for AMD and NVIDIA GPUs from single source code.
extract    : false
clang      : yes
builddeps  :
    - pkgconfig(gl)
    - pkgconfig(libhsakmt)
    - pkgconfig(numa)
    - pkgconfig(x11-xcb)
    - python-cppheaderparser
    - python-ply
    - rocminfo
    - rocm-cmake
    - rocm-compilersupport-devel
    - rocm-device-libs-devel
    - rocm-opencl-devel
    - rocm-runtime-devel
patterns   :
    - docs:
        - /usr/share/*
rundeps    :
    - rocminfo
    - devel:
        - llvm-clang-devel
        - rocm-compilersupport-devel
        - rocm-smi
        - rocm-device-libs-devel
        - rocm-runtime-devel
        - rocminfo
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
    )

    for name in "${!rocm_vars[@]}"; do
        echo "Setting $name to ${rocm_vars[$name]}";
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done
    
    export AMDOPENCL_DIR="%workdir%/ROCm-OpenCL-Runtime-rocm-%version%"
    export HIPAMD_DIR="%workdir%/hipamd-rocm-%version%"
    export HIP_DIR="%workdir%/HIP-rocm-%version%"
    export ROCCLR_DIR="%workdir%/ROCclr-rocm-%version%"
    export ROCTRACER_DIR="%workdir%/roctracer-rocm-%version%"
setup      : |
    tar -xzf $sources/ROCclr-%version%.tar.gz
    tar -xzf $sources/ROCm-OpenCL-Runtime-%version%.tar.gz
    tar -xzf $sources/hipamd-%version%.tar.gz
    tar -xzf $sources/roctracer-%version%.tar.gz
    tar -xzf $sources/HIP-%version%.tar.gz

    pushd $ROCCLR_DIR
        %patch -p1 -i $pkgfiles/0001-enable-gfx800.patch
        %patch -p1 -i $pkgfiles/0022-improve-rocclr-isa-compatibility-check.patch
        %patch -p1 -i $pkgfiles/missing-cstdint.diff
        echo "set_target_properties(rocclr PROPERTIES VERSION %version% SOVERSION 5.5)" >> cmake/ROCclr.cmake
    popd

    pushd $AMDOPENCL_DIR
        echo "set_target_properties(cltrace PROPERTIES VERSION %version% SOVERSION 5.5)" >> tools/cltrace/CMakeLists.txt
    popd

    pushd $HIP_DIR
        %patch -p1 -i $pkgfiles/bitcode_paths.patch
    popd

    cd $HIPAMD_DIR

    %patch -p1 -i $pkgfiles/hipamd_bitcode_paths.patch
    %patch -p1 -i $pkgfiles/0023-extend-hip-isa-compatibility-check.patch
    %cmake_ninja $ROCM_CMAKE_FLAGS \
                 -DAMD_OPENCL_PATH=$AMDOPENCL_DIR \
                 -DPROF_API_HEADER_PATH=$ROCTRACER_DIR/inc/ext \
                 -DROCCLR_PATH=$ROCCLR_DIR \
                 -DHIP_COMMON_DIR=$HIP_DIR \
                 -DFILE_REORG_BACKWARD_COMPATIBILITY=OFF \
build      : |
    cd $HIPAMD_DIR
    %ninja_build
install    : |
    cd $HIPAMD_DIR
    %ninja_install
