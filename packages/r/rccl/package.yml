name       : rccl
version    : 5.5.1
release    : 1
source     :
    - https://github.com/ROCmSoftwarePlatform/rccl/archive/refs/tags/rocm-5.5.1.tar.gz : f6b9dc6dafeb49d95c085825876b09317d8252771c746ccf5aa19a9204a404b2
homepage   : https://github.com/ROCmSoftwarePlatform/rccl
license    : MIT
component  : programming.library
summary    : ROCm Communication Collectives Library (RCCL)
description: |
    RCCL (pronounced "Rickle") is a stand-alone library of standard collective communication routines for GPUs, implementing all-reduce, all-gather, reduce, broadcast, reduce-scatter, gather, scatter, and all-to-all. There is also initial support for direct GPU-to-GPU send and receive operations. It has been optimized to achieve high bandwidth on platforms using PCIe, xGMI as well as networking using InfiniBand Verbs or TCP/IP sockets. RCCL supports an arbitrary number of GPUs installed in a single node or multiple nodes, and can be used in either single- or multi-process (e.g., MPI) applications.
clang      : yes
builddeps  :
    - rocm-cmake
    - rocm-hip-devel
    - rocm-smi-devel
    - rocm-hipify
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
        # ["AMDGPU_TARGETS"]="gfx1030"
        # ["HCC_AMDGPU_TARGETS"]="gfx1030"
    )

    for name in "${!rocm_vars[@]}"; do
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    export CXXFLAGS="${CXXFLAGS/-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=32/-fcf-protection=none}"
setup      : |
    %cmake_ninja $ROCM_CMAKE_FLAGS \
                 -DCMAKE_CXX_COMPILER=hipcc \
                 -DBUILD_STATIC=OFF \
                 -DBUILD_TESTS=OFF \
build      : |
    %ninja_build
install    : |
    %ninja_install

    mv $installdir/usr/lib $installdir/%libdir%
    rm -r $installdir/usr/rccl
