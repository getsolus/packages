name       : hipfft
version    : 5.5.1
release    : 1
source     :
    - git|https://github.com/ROCmSoftwarePlatform/hipFFT.git : rocm-5.5.1
homepage   : https://github.com/ROCmSoftwarePlatform/hipFFT
license    : MIT
component  : programming.library
summary    : ROCm FFT marshalling library
description: |
    hipFFT is an FFT marshalling library. Currently, hipFFT supports either rocFFT or cuFFT as backends. hipFFT exports an interface that does not require the client to change, regardless of the chosen backend. It sits between the application and the backend FFT library, marshalling inputs into the backend and results back to the application.
clang      : yes
builddeps  :
    - rocfft-devel
    - rocm-cmake
    - rocm-hip-devel
environment: |
    declare -A rocm_vars
    rocm_vars=(
        ["HIP_DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["DEVICE_LIB_PATH"]="/usr/lib64/amdgcn/bitcode"
        ["HIP_CLANG_PATH"]="/usr/bin"
        ["HIP_COMPILER"]="clang"
        ["HIP_LIB_PATH"]="/usr/lib64"
        ["HIP_PATH"]="/usr"
        ["HIP_PLATFORM"]="amd"
        ["HIP_ROCCLR_HOME"]="/usr"
        ["ROCM_PATH"]="/usr"
        ["BUILD_FILE_REORG_BACKWARD_COMPATIBILITY"]="OFF"
        ["HIPCC_VERBOSE"]="0"
        # ["AMDGPU_TARGETS"]="gfx1030"
        # ["HCC_AMDGPU_TARGETS"]="gfx1030"
    )

    for name in "${!rocm_vars[@]}"; do
        export "$name"="${rocm_vars[$name]}";
        export ROCM_CMAKE_FLAGS="$ROCM_CMAKE_FLAGS -D$name=${rocm_vars[$name]}";
    done

    export CXXFLAGS="${CXXFLAGS/-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=32/-fcf-protection=none}"
setup      : |
    %patch -p1 -i $pkgfiles/Enable-soversion.patch

    %cmake_ninja $ROCM_CMAKE_FLAGS
build      : |
    %ninja_build
install    : |
    %ninja_install

    mv $installdir/usr/lib $installdir/%libdir%
    rm -rf $installdir/usr/hipfft
