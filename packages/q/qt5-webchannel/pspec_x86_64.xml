<PISI>
    <Source>
        <Name>qt5-webchannel</Name>
        <Homepage>https://www.qt.io</Homepage>
        <Packager>
            <Name>Reilly Brogan</Name>
            <Email>solus@reillybrogan.com</Email>
        </Packager>
        <License>GFDL-1.3-or-later</License>
        <License>GPL-2.0-or-later</License>
        <License>GPL-3.0-or-later</License>
        <License>LGPL-2.1-or-later</License>
        <License>LGPL-3.0-or-later</License>
        <PartOf>desktop.qt</PartOf>
        <Summary xml:lang="en">Qt5 Webchannel Module</Summary>
        <Description xml:lang="en">The Qt WebChannel module offers Qt applications a seamless way to publish `QObjects` for interaction
with HTML/JavaScript clients. These clients can either be inside local Qt `WebView`s or any other,
potentially remote, client which supports JavaScript, as long as a communication channel such
as WebSocket is available.
Qt WebChannel uses introspection on the `QObject`s and sends this serialized data to the clients.
There, with the help of a small JavaScript library, an object is created which simulates the API of
the `QObject`. Any invokable methods, including slots, can be called as well as properties read and
written. Additionally you can connect to signals and register JavaScript callbacks as handlers.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://sources.getsol.us/README.Solus</Archive>
    </Source>
    <Package>
        <Name>qt5-webchannel</Name>
        <Summary xml:lang="en">Qt5 Webchannel Module</Summary>
        <Description xml:lang="en">The Qt WebChannel module offers Qt applications a seamless way to publish `QObjects` for interaction
with HTML/JavaScript clients. These clients can either be inside local Qt `WebView`s or any other,
potentially remote, client which supports JavaScript, as long as a communication channel such
as WebSocket is available.
Qt WebChannel uses introspection on the `QObject`s and sends this serialized data to the clients.
There, with the help of a small JavaScript library, an object is created which simulates the API of
the `QObject`. Any invokable methods, including slots, can be called as well as properties read and
written. Additionally you can connect to signals and register JavaScript callbacks as handlers.
</Description>
        <PartOf>desktop.qt</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/libQt5WebChannel.so.5</Path>
            <Path fileType="library">/usr/lib64/libQt5WebChannel.so.5.15</Path>
            <Path fileType="library">/usr/lib64/libQt5WebChannel.so.5.15.11</Path>
            <Path fileType="library">/usr/lib64/qt5/qml/QtWebChannel/libdeclarative_webchannel.so</Path>
            <Path fileType="library">/usr/lib64/qt5/qml/QtWebChannel/plugins.qmltypes</Path>
            <Path fileType="library">/usr/lib64/qt5/qml/QtWebChannel/qmldir</Path>
        </Files>
    </Package>
    <Package>
        <Name>qt5-webchannel-demos</Name>
        <Summary xml:lang="en">Qt5 Webchannel Module</Summary>
        <Description xml:lang="en">The Qt WebChannel module offers Qt applications a seamless way to publish `QObjects` for interaction
with HTML/JavaScript clients. These clients can either be inside local Qt `WebView`s or any other,
potentially remote, client which supports JavaScript, as long as a communication channel such
as WebSocket is available.
Qt WebChannel uses introspection on the `QObject`s and sends this serialized data to the clients.
There, with the help of a small JavaScript library, an object is created which simulates the API of
the `QObject`. Any invokable methods, including slots, can be called as well as properties read and
written. Additionally you can connect to signals and register JavaScript callbacks as handlers.
</Description>
        <PartOf>programming.library</PartOf>
        <RuntimeDependencies>
            <Dependency release="32">qt5-webchannel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-html/chatclient-html.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-html/chatclient.html</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-html/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-qml/LoginForm.ui.qml</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-qml/MainForm.ui.qml</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-qml/chatclient-qml.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-qml/qmlchatclient.qml</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatclient-qml/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatserver-cpp/chatserver</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatserver-cpp/chatserver-cpp.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatserver-cpp/chatserver.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatserver-cpp/chatserver.h</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/chatserver-cpp/main.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/exampleassets.pri</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/nodejs/README</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/nodejs/chatclient.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/nodejs/nodejs.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/nodejs/package.json</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/nodejs/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/qwclient/README</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/qwclient/package.json</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/qwclient/qwclient.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/qwclient/qwclient.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/qwclient/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/shared/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/shared/websocketclientwrapper.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/shared/websocketclientwrapper.h</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/shared/websockettransport.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/shared/websockettransport.h</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/core.h</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/dialog.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/dialog.h</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/dialog.ui</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/index.html</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/main.cpp</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/qwebchannel.js</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/standalone</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/standalone/standalone.pro</Path>
            <Path fileType="library">/usr/lib64/qt5/examples/webchannel/webchannel.pro</Path>
        </Files>
    </Package>
    <Package>
        <Name>qt5-webchannel-devel</Name>
        <Summary xml:lang="en">Development files for qt5-webchannel</Summary>
        <Description xml:lang="en">The Qt WebChannel module offers Qt applications a seamless way to publish `QObjects` for interaction
with HTML/JavaScript clients. These clients can either be inside local Qt `WebView`s or any other,
potentially remote, client which supports JavaScript, as long as a communication channel such
as WebSocket is available.
Qt WebChannel uses introspection on the `QObject`s and sends this serialized data to the clients.
There, with the help of a small JavaScript library, an object is created which simulates the API of
the `QObject`. Any invokable methods, including slots, can be called as well as properties read and
written. Additionally you can connect to signals and register JavaScript callbacks as handlers.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="32">qt5-webchannel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/QtWebChannel/5.15.11/QtWebChannel/private/qmetaobjectpublisher_p.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/5.15.11/QtWebChannel/private/qqmlwebchannelattached_p.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/5.15.11/QtWebChannel/private/qwebchannel_p.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/5.15.11/QtWebChannel/private/signalhandler_p.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/5.15.11/QtWebChannel/private/variantargument_p.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QQmlWebChannel</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QWebChannel</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QWebChannelAbstractTransport</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QtWebChannel</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QtWebChannelDepends</Path>
            <Path fileType="header">/usr/include/QtWebChannel/QtWebChannelVersion</Path>
            <Path fileType="header">/usr/include/QtWebChannel/qqmlwebchannel.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/qtwebchannelversion.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/qwebchannel.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/qwebchannelabstracttransport.h</Path>
            <Path fileType="header">/usr/include/QtWebChannel/qwebchannelglobal.h</Path>
            <Path fileType="library">/usr/lib64/cmake/Qt5WebChannel/Qt5WebChannelConfig.cmake</Path>
            <Path fileType="library">/usr/lib64/cmake/Qt5WebChannel/Qt5WebChannelConfigVersion.cmake</Path>
            <Path fileType="library">/usr/lib64/libQt5WebChannel.prl</Path>
            <Path fileType="library">/usr/lib64/libQt5WebChannel.so</Path>
            <Path fileType="data">/usr/lib64/pkgconfig/Qt5WebChannel.pc</Path>
            <Path fileType="library">/usr/lib64/qt5/mkspecs/modules/qt_lib_webchannel.pri</Path>
            <Path fileType="library">/usr/lib64/qt5/mkspecs/modules/qt_lib_webchannel_private.pri</Path>
        </Files>
    </Package>
    <History>
        <Update release="32">
            <Date>2023-10-31</Date>
            <Version>5.15.11</Version>
            <Comment>Packaging update</Comment>
            <Name>Reilly Brogan</Name>
            <Email>solus@reillybrogan.com</Email>
        </Update>
    </History>
</PISI>